{"version":3,"sources":["assets/lib/require/css.js"],"names":["define","window","load","n","r","head","document","getElementsByTagName","engine","navigator","userAgent","match","useImportLoad","useOnload","parseInt","cssAPI","pluginBuilder","curStyle","curSheet","ieCurCallback","createStyle","createElement","appendChild","styleSheet","sheet","ieCnt","ieLoads","createIeLoad","url","addImport","onload","processIeLoad","nextLoad","shift","importLoad","callback","push","textContent","loadInterval","setInterval","cssRules","clearInterval","e","linkLoad","link","type","rel","setTimeout","i","styleSheets","length","href","normalize","name","substr","cssId","req","config","toUrl"],"mappings":"AAgCAA,OAAO,WAEL,GAAqB,mBAAVC,QACT,OAASC,KAAM,SAASC,EAAGC,EAAGF,GAAOA,KAEvC,IAAIG,GAAOC,SAASC,qBAAqB,QAAQ,GAE7CC,EAASP,OAAOQ,UAAUC,UAAUC,MAAM,oIAAsI,EAGhLC,GAAgB,EAGhBC,GAAY,CAGZL,GAAO,IAAMA,EAAO,GACtBI,EAAgBE,SAASN,EAAO,IAAM,GAAKM,SAASN,EAAO,KAAO,EAE3DA,EAAO,IAAMA,EAAO,GAC3BK,GAAY,EAELL,EAAO,KACdI,EAAgBE,SAASN,EAAO,IAAM,GAIxC,IAAIO,KAGJA,GAAOC,cAAgB,eAGvB,IAAIC,GAAUC,EAQVC,EAPAC,EAAc,WAChBH,EAAWX,SAASe,cAAc,SAClChB,EAAKiB,YAAYL,GACjBC,EAAWD,EAASM,YAAcN,EAASO,OAEzCC,EAAQ,EACRC,KAGAC,EAAe,SAASC,GAC1BV,EAASW,UAAUD,GACnBX,EAASa,OAAS,WAAYC,KAE9BN,IACa,IAATA,IACFL,IACAK,EAAQ,IAGRM,EAAgB,WAClBZ,GAEA,IAAIa,GAAWN,EAAQO,OAEvB,OAAKD,IAKLb,EAAgBa,EAAS,OACzBL,GAAaK,EAAS,UALpBb,EAAgB,OAOhBe,EAAa,SAASN,EAAKO,GAI7B,GAHKjB,GAAaA,EAASW,WACzBT,IAEEF,GAAYA,EAASW,UAEnBV,EACFO,EAAQU,MAAMR,EAAKO,KAGnBR,EAAaC,GACbT,EAAgBgB,OAGf,CAEHlB,EAASoB,YAAc,YAAcT,EAAM,IAE3C,IAAIU,GAAeC,YAAY,WAC7B,IACEtB,EAASO,MAAMgB,SACfC,cAAcH,GACdH,IACA,MAAMO,MACP,MAKHC,EAAW,SAASf,EAAKO,GAC3B,GAAIS,GAAOtC,SAASe,cAAc,OAGlC,IAFAuB,EAAKC,KAAO,WACZD,EAAKE,IAAM,aACPjC,EACF+B,EAAKd,OAAS,WACZc,EAAKd,OAAS,aAEdiB,WAAWZ,EAAU,QAGvB,IAAIG,GAAeC,YAAY,WAC7B,IAAK,GAAIS,GAAI,EAAGA,EAAI1C,SAAS2C,YAAYC,OAAQF,IAAK,CACpD,GAAIxB,GAAQlB,SAAS2C,YAAYD,EACjC,IAAIxB,EAAM2B,MAAQP,EAAKO,KAErB,MADAV,eAAcH,GACPH,MAGV,GACLS,GAAKO,KAAOvB,EACZvB,EAAKiB,YAAYsB,GAmBnB,OAfA7B,GAAOqC,UAAY,SAASC,EAAMD,GAIhC,MAHuC,QAAnCC,EAAKC,OAAOD,EAAKH,OAAS,EAAG,KAC/BG,EAAOA,EAAKC,OAAO,EAAGD,EAAKH,OAAS,IAE/BE,EAAUC,IAInBtC,EAAOb,KAAO,SAASqD,EAAOC,EAAKtD,EAAMuD,IAEtC7C,EAAgBsB,EAAaS,GAAUa,EAAIE,MAAMH,EAAQ,QAASrD,IAK9Da","file":"css.js","sourcesContent":["/*\n * Require-CSS RequireJS css! loader plugin\n * 0.1.8\n * Guy Bedford 2014\n * MIT\n */\n\n/*\n *\n * Usage:\n *  require(['css!./mycssFile']);\n *\n * Tested and working in (up to latest versions as of March 2013):\n * Android\n * iOS 6\n * IE 6 - 10\n * Chome 3 - 26\n * Firefox 3.5 - 19\n * Opera 10 - 12\n * \n * browserling.com used for virtual testing environment\n *\n * Credit to B Cavalier & J Hann for the IE 6 - 9 method,\n * refined with help from Martin Cermak\n * \n * Sources that helped along the way:\n * - https://developer.mozilla.org/en-US/docs/Browser_detection_using_the_user_agent\n * - http://www.phpied.com/when-is-a-stylesheet-really-loaded/\n * - https://github.com/cujojs/curl/blob/master/src/curl/plugin/css.js\n *\n */\n\ndefine(function() {\n//>>excludeStart('excludeRequireCss', pragmas.excludeRequireCss)\n  if (typeof window == 'undefined')\n    return { load: function(n, r, load){ load() } };\n\n  var head = document.getElementsByTagName('head')[0];\n\n  var engine = window.navigator.userAgent.match(/Trident\\/([^ ;]*)|AppleWebKit\\/([^ ;]*)|Opera\\/([^ ;]*)|rv\\:([^ ;]*)(.*?)Gecko\\/([^ ;]*)|MSIE\\s([^ ;]*)|AndroidWebKit\\/([^ ;]*)/) || 0;\n\n  // use <style> @import load method (IE < 9, Firefox < 18)\n  var useImportLoad = false;\n  \n  // set to false for explicit <link> load checking when onload doesn't work perfectly (webkit)\n  var useOnload = true;\n\n  // trident / msie\n  if (engine[1] || engine[7])\n    useImportLoad = parseInt(engine[1]) < 6 || parseInt(engine[7]) <= 9;\n  // webkit\n  else if (engine[2] || engine[8])\n    useOnload = false;\n  // gecko\n  else if (engine[4])\n    useImportLoad = parseInt(engine[4]) < 18;\n\n//>>excludeEnd('excludeRequireCss')\n  //main api object\n  var cssAPI = {};\n\n//>>excludeStart('excludeRequireCss', pragmas.excludeRequireCss)\n  cssAPI.pluginBuilder = './css-builder';\n\n  // <style> @import load method\n  var curStyle, curSheet;\n  var createStyle = function () {\n    curStyle = document.createElement('style');\n    head.appendChild(curStyle);\n    curSheet = curStyle.styleSheet || curStyle.sheet;\n  }\n  var ieCnt = 0;\n  var ieLoads = [];\n  var ieCurCallback;\n  \n  var createIeLoad = function(url) {\n    curSheet.addImport(url);\n    curStyle.onload = function(){ processIeLoad() };\n    \n    ieCnt++;\n    if (ieCnt == 31) {\n      createStyle();\n      ieCnt = 0;\n    }\n  }\n  var processIeLoad = function() {\n    ieCurCallback();\n \n    var nextLoad = ieLoads.shift();\n \n    if (!nextLoad) {\n      ieCurCallback = null;\n      return;\n    }\n \n    ieCurCallback = nextLoad[1];\n    createIeLoad(nextLoad[0]);\n  }\n  var importLoad = function(url, callback) {\n    if (!curSheet || !curSheet.addImport)\n      createStyle();\n\n    if (curSheet && curSheet.addImport) {\n      // old IE\n      if (ieCurCallback) {\n        ieLoads.push([url, callback]);\n      }\n      else {\n        createIeLoad(url);\n        ieCurCallback = callback;\n      }\n    }\n    else {\n      // old Firefox\n      curStyle.textContent = '@import \"' + url + '\";';\n\n      var loadInterval = setInterval(function() {\n        try {\n          curStyle.sheet.cssRules;\n          clearInterval(loadInterval);\n          callback();\n        } catch(e) {}\n      }, 10);\n    }\n  }\n\n  // <link> load method\n  var linkLoad = function(url, callback) {\n    var link = document.createElement('link');\n    link.type = 'text/css';\n    link.rel = 'stylesheet';\n    if (useOnload)\n      link.onload = function() {\n        link.onload = function() {};\n        // for style dimensions queries, a short delay can still be necessary\n        setTimeout(callback, 7);\n      }\n    else\n      var loadInterval = setInterval(function() {\n        for (var i = 0; i < document.styleSheets.length; i++) {\n          var sheet = document.styleSheets[i];\n          if (sheet.href == link.href) {\n            clearInterval(loadInterval);\n            return callback();\n          }\n        }\n      }, 10);\n    link.href = url;\n    head.appendChild(link);\n  }\n\n//>>excludeEnd('excludeRequireCss')\n  cssAPI.normalize = function(name, normalize) {\n    if (name.substr(name.length - 4, 4) == '.css')\n      name = name.substr(0, name.length - 4);\n\n    return normalize(name);\n  }\n\n//>>excludeStart('excludeRequireCss', pragmas.excludeRequireCss)\n  cssAPI.load = function(cssId, req, load, config) {\n\n    (useImportLoad ? importLoad : linkLoad)(req.toUrl(cssId + '.css'), load);\n\n  }\n\n//>>excludeEnd('excludeRequireCss')\n  return cssAPI;\n});\n"]}