{"version":3,"sources":["assets/lib/require/require-2.1.5.js"],"names":["requirejs","require","define","global","isFunction","it","ostring","call","isArray","each","ary","func","i","length","eachReverse","hasProp","obj","prop","hasOwn","getOwn","eachProp","mixin","target","source","force","deepStringMixin","value","bind","fn","apply","arguments","scripts","document","getElementsByTagName","getGlobal","g","split","part","makeError","id","msg","err","requireModules","e","Error","requireType","originalError","newContext","contextName","trimDots","splice","normalize","name","baseName","applyMap","pkgName","pkgConfig","mapValue","nameParts","j","nameSegment","foundMap","foundI","foundStarMap","starI","baseParts","normalizedBaseParts","map","config","starMap","charAt","pkgs","slice","concat","join","main","indexOf","substring","removeScript","isBrowser","scriptNode","getAttribute","context","parentNode","removeChild","hasPathFallback","pathConfig","paths","shift","undef","splitPrefix","prefix","index","makeModuleMap","parentModuleMap","isNormalized","url","pluginModule","suffix","parentName","originalName","isDefine","normalizedName","requireCounter","defined","nameToUrl","unnormalizedCounter","parentMap","unnormalized","getModule","depMap","mod","registry","Module","on","defineEmitComplete","onError","errback","ids","notified","error","events","emit","req","takeGlobalQueue","globalDefQueue","apsp","defQueue","cleanRegistry","enabledRegistry","breakCycle","traced","processed","depMaps","depId","dep","depMatched","defineDep","check","checkLoaded","modId","usingPathFallback","waitInterval","waitSeconds","expired","startTime","Date","getTime","noLoads","reqCalls","stillLoading","needCycleCheck","inCheckLoaded","enabled","push","inited","fetched","isWebWorker","checkLoadedTimeoutId","setTimeout","callGetModule","args","init","removeListener","node","ieName","detachEvent","isOpera","removeEventListener","getScriptData","evt","currentTarget","srcElement","onScriptLoad","onScriptError","intakeDefines","handlers","baseUrl","shim","undefEvents","urlFetched","makeRequire","exports","usingExports","module","uri","this","depExports","pluginMaps","depCount","prototype","factory","options","ignore","enable","fetch","enableBuildCallback","deps","callPlugin","load","enabling","cjsModule","defining","execCb","undefined","requireMap","onResourceLoad","defineEmitted","pluginMap","plugin","normalizedMap","normalizedMod","localRequire","fromText","text","textAlt","moduleName","moduleMap","hasInteractive","useInteractive","exec","completeLoad","handler","skipMap","cb","cbs","nextTick","configure","cfg","objs","exportsFn","makeShimExports","packages","pkgObj","location","replace","currDirRegExp","jsSuffixRegExp","callback","ret","relMap","requireMod","__requireJsBuild","get","toUrl","moduleNamePlusExt","ext","lastIndexOf","segment","isRelative","specified","found","shExports","enforceDefine","skipExt","pkg","pkgPath","syms","parentModule","parentPath","jsExtRegExp","test","match","urlArgs","type","readyRegExp","readyState","interactiveScript","data","getInteractiveScript","script","s","head","baseElement","dataMain","src","currentlyAddingScript","mainScript","subPath","version","commentRegExp","cjsRequireRegExp","op","Object","toString","hasOwnProperty","ap","Array","window","navigator","importScripts","platform","defContextName","opera","contexts","optional","ctx","xhtml","createElementNS","createElement","scriptType","charset","async","setAttribute","attachEvent","addEventListener","insertBefore","appendChild","pop","amd","jQuery","eval"],"mappings":"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","file":"require-2.1.5.js","sourcesContent":["/** vim: et:ts=4:sw=4:sts=4\n * @license RequireJS 2.1.5 Copyright (c) 2010-2012, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/jrburke/requirejs for details\n */\n//Not using strict: uneven strict support in browsers, #392, and causes\n//problems with requirejs.exec()/transpiler plugins that may not be strict.\n/*jslint regexp: true, nomen: true, sloppy: true */\n/*global window, navigator, document, importScripts, setTimeout, opera */\n\nvar requirejs, require, define;\n(function (global) {\n    var req, s, head, baseElement, dataMain, src,\n        interactiveScript, currentlyAddingScript, mainScript, subPath,\n        version = '2.1.5',\n        commentRegExp = /(\\/\\*([\\s\\S]*?)\\*\\/|([^:]|^)\\/\\/(.*)$)/mg,\n        cjsRequireRegExp = /[^.]\\s*require\\s*\\(\\s*[\"']([^'\"\\s]+)[\"']\\s*\\)/g,\n        jsSuffixRegExp = /\\.js$/,\n        currDirRegExp = /^\\.\\//,\n        op = Object.prototype,\n        ostring = op.toString,\n        hasOwn = op.hasOwnProperty,\n        ap = Array.prototype,\n        apsp = ap.splice,\n        isBrowser = !!(typeof window !== 'undefined' && navigator && document),\n        isWebWorker = !isBrowser && typeof importScripts !== 'undefined',\n        //PS3 indicates loaded and complete, but need to wait for complete\n        //specifically. Sequence is 'loading', 'loaded', execution,\n        // then 'complete'. The UA check is unfortunate, but not sure how\n        //to feature test w/o causing perf issues.\n        readyRegExp = isBrowser && navigator.platform === 'PLAYSTATION 3' ?\n                      /^complete$/ : /^(complete|loaded)$/,\n        defContextName = '_',\n        //Oh the tragedy, detecting opera. See the usage of isOpera for reason.\n        isOpera = typeof opera !== 'undefined' && opera.toString() === '[object Opera]',\n        contexts = {},\n        cfg = {},\n        globalDefQueue = [],\n        useInteractive = false;\n\n    function isFunction(it) {\n        return ostring.call(it) === '[object Function]';\n    }\n\n    function isArray(it) {\n        return ostring.call(it) === '[object Array]';\n    }\n\n    /**\n     * Helper function for iterating over an array. If the func returns\n     * a true value, it will break out of the loop.\n     */\n    function each(ary, func) {\n        if (ary) {\n            var i;\n            for (i = 0; i < ary.length; i += 1) {\n                if (ary[i] && func(ary[i], i, ary)) {\n                    break;\n                }\n            }\n        }\n    }\n\n    /**\n     * Helper function for iterating over an array backwards. If the func\n     * returns a true value, it will break out of the loop.\n     */\n    function eachReverse(ary, func) {\n        if (ary) {\n            var i;\n            for (i = ary.length - 1; i > -1; i -= 1) {\n                if (ary[i] && func(ary[i], i, ary)) {\n                    break;\n                }\n            }\n        }\n    }\n\n    function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n    }\n\n    function getOwn(obj, prop) {\n        return hasProp(obj, prop) && obj[prop];\n    }\n\n    /**\n     * Cycles over properties in an object and calls a function for each\n     * property value. If the function returns a truthy value, then the\n     * iteration is stopped.\n     */\n    function eachProp(obj, func) {\n        var prop;\n        for (prop in obj) {\n            if (hasProp(obj, prop)) {\n                if (func(obj[prop], prop)) {\n                    break;\n                }\n            }\n        }\n    }\n\n    /**\n     * Simple function to mix in properties from source into target,\n     * but only if target does not already have a property of the same name.\n     */\n    function mixin(target, source, force, deepStringMixin) {\n        if (source) {\n            eachProp(source, function (value, prop) {\n                if (force || !hasProp(target, prop)) {\n                    if (deepStringMixin && typeof value !== 'string') {\n                        if (!target[prop]) {\n                            target[prop] = {};\n                        }\n                        mixin(target[prop], value, force, deepStringMixin);\n                    } else {\n                        target[prop] = value;\n                    }\n                }\n            });\n        }\n        return target;\n    }\n\n    //Similar to Function.prototype.bind, but the 'this' object is specified\n    //first, since it is easier to read/figure out what 'this' will be.\n    function bind(obj, fn) {\n        return function () {\n            return fn.apply(obj, arguments);\n        };\n    }\n\n    function scripts() {\n        return document.getElementsByTagName('script');\n    }\n\n    //Allow getting a global that expressed in\n    //dot notation, like 'a.b.c'.\n    function getGlobal(value) {\n        if (!value) {\n            return value;\n        }\n        var g = global;\n        each(value.split('.'), function (part) {\n            g = g[part];\n        });\n        return g;\n    }\n\n    /**\n     * Constructs an error with a pointer to an URL with more information.\n     * @param {String} id the error ID that maps to an ID on a web page.\n     * @param {String} message human readable error.\n     * @param {Error} [err] the original error, if there is one.\n     *\n     * @returns {Error}\n     */\n    function makeError(id, msg, err, requireModules) {\n        var e = new Error(msg + '\\nhttp://requirejs.org/docs/errors.html#' + id);\n        e.requireType = id;\n        e.requireModules = requireModules;\n        if (err) {\n            e.originalError = err;\n        }\n        return e;\n    }\n\n    if (typeof define !== 'undefined') {\n        //If a define is already in play via another AMD loader,\n        //do not overwrite.\n        return;\n    }\n\n    if (typeof requirejs !== 'undefined') {\n        if (isFunction(requirejs)) {\n            //Do not overwrite and existing requirejs instance.\n            return;\n        }\n        cfg = requirejs;\n        requirejs = undefined;\n    }\n\n    //Allow for a require config object\n    if (typeof require !== 'undefined' && !isFunction(require)) {\n        //assume it is a config object.\n        cfg = require;\n        require = undefined;\n    }\n\n    function newContext(contextName) {\n        var inCheckLoaded, Module, context, handlers,\n            checkLoadedTimeoutId,\n            config = {\n                //Defaults. Do not set a default for map\n                //config to speed up normalize(), which\n                //will run faster if there is no default.\n                waitSeconds: 7,\n                baseUrl: './',\n                paths: {},\n                pkgs: {},\n                shim: {},\n                config: {}\n            },\n            registry = {},\n            //registry of just enabled modules, to speed\n            //cycle breaking code when lots of modules\n            //are registered, but not activated.\n            enabledRegistry = {},\n            undefEvents = {},\n            defQueue = [],\n            defined = {},\n            urlFetched = {},\n            requireCounter = 1,\n            unnormalizedCounter = 1;\n\n        /**\n         * Trims the . and .. from an array of path segments.\n         * It will keep a leading path segment if a .. will become\n         * the first path segment, to help with module name lookups,\n         * which act like paths, but can be remapped. But the end result,\n         * all paths that use this function should look normalized.\n         * NOTE: this method MODIFIES the input array.\n         * @param {Array} ary the array of path segments.\n         */\n        function trimDots(ary) {\n            var i, part;\n            for (i = 0; ary[i]; i += 1) {\n                part = ary[i];\n                if (part === '.') {\n                    ary.splice(i, 1);\n                    i -= 1;\n                } else if (part === '..') {\n                    if (i === 1 && (ary[2] === '..' || ary[0] === '..')) {\n                        //End of the line. Keep at least one non-dot\n                        //path segment at the front so it can be mapped\n                        //correctly to disk. Otherwise, there is likely\n                        //no path mapping for a path starting with '..'.\n                        //This can still fail, but catches the most reasonable\n                        //uses of ..\n                        break;\n                    } else if (i > 0) {\n                        ary.splice(i - 1, 2);\n                        i -= 2;\n                    }\n                }\n            }\n        }\n\n        /**\n         * Given a relative module name, like ./something, normalize it to\n         * a real name that can be mapped to a path.\n         * @param {String} name the relative name\n         * @param {String} baseName a real name that the name arg is relative\n         * to.\n         * @param {Boolean} applyMap apply the map config to the value. Should\n         * only be done if this normalization is for a dependency ID.\n         * @returns {String} normalized name\n         */\n        function normalize(name, baseName, applyMap) {\n            var pkgName, pkgConfig, mapValue, nameParts, i, j, nameSegment,\n                foundMap, foundI, foundStarMap, starI,\n                baseParts = baseName && baseName.split('/'),\n                normalizedBaseParts = baseParts,\n                map = config.map,\n                starMap = map && map['*'];\n\n            //Adjust any relative paths.\n            if (name && name.charAt(0) === '.') {\n                //If have a base name, try to normalize against it,\n                //otherwise, assume it is a top-level require that will\n                //be relative to baseUrl in the end.\n                if (baseName) {\n                    if (getOwn(config.pkgs, baseName)) {\n                        //If the baseName is a package name, then just treat it as one\n                        //name to concat the name with.\n                        normalizedBaseParts = baseParts = [baseName];\n                    } else {\n                        //Convert baseName to array, and lop off the last part,\n                        //so that . matches that 'directory' and not name of the baseName's\n                        //module. For instance, baseName of 'one/two/three', maps to\n                        //'one/two/three.js', but we want the directory, 'one/two' for\n                        //this normalization.\n                        normalizedBaseParts = baseParts.slice(0, baseParts.length - 1);\n                    }\n\n                    name = normalizedBaseParts.concat(name.split('/'));\n                    trimDots(name);\n\n                    //Some use of packages may use a . path to reference the\n                    //'main' module name, so normalize for that.\n                    pkgConfig = getOwn(config.pkgs, (pkgName = name[0]));\n                    name = name.join('/');\n                    if (pkgConfig && name === pkgName + '/' + pkgConfig.main) {\n                        name = pkgName;\n                    }\n                } else if (name.indexOf('./') === 0) {\n                    // No baseName, so this is ID is resolved relative\n                    // to baseUrl, pull off the leading dot.\n                    name = name.substring(2);\n                }\n            }\n\n            //Apply map config if available.\n            if (applyMap && map && (baseParts || starMap)) {\n                nameParts = name.split('/');\n\n                for (i = nameParts.length; i > 0; i -= 1) {\n                    nameSegment = nameParts.slice(0, i).join('/');\n\n                    if (baseParts) {\n                        //Find the longest baseName segment match in the config.\n                        //So, do joins on the biggest to smallest lengths of baseParts.\n                        for (j = baseParts.length; j > 0; j -= 1) {\n                            mapValue = getOwn(map, baseParts.slice(0, j).join('/'));\n\n                            //baseName segment has config, find if it has one for\n                            //this name.\n                            if (mapValue) {\n                                mapValue = getOwn(mapValue, nameSegment);\n                                if (mapValue) {\n                                    //Match, update name to the new value.\n                                    foundMap = mapValue;\n                                    foundI = i;\n                                    break;\n                                }\n                            }\n                        }\n                    }\n\n                    if (foundMap) {\n                        break;\n                    }\n\n                    //Check for a star map match, but just hold on to it,\n                    //if there is a shorter segment match later in a matching\n                    //config, then favor over this star map.\n                    if (!foundStarMap && starMap && getOwn(starMap, nameSegment)) {\n                        foundStarMap = getOwn(starMap, nameSegment);\n                        starI = i;\n                    }\n                }\n\n                if (!foundMap && foundStarMap) {\n                    foundMap = foundStarMap;\n                    foundI = starI;\n                }\n\n                if (foundMap) {\n                    nameParts.splice(0, foundI, foundMap);\n                    name = nameParts.join('/');\n                }\n            }\n\n            return name;\n        }\n\n        function removeScript(name) {\n            if (isBrowser) {\n                each(scripts(), function (scriptNode) {\n                    if (scriptNode.getAttribute('data-requiremodule') === name &&\n                            scriptNode.getAttribute('data-requirecontext') === context.contextName) {\n                        scriptNode.parentNode.removeChild(scriptNode);\n                        return true;\n                    }\n                });\n            }\n        }\n\n        function hasPathFallback(id) {\n            var pathConfig = getOwn(config.paths, id);\n            if (pathConfig && isArray(pathConfig) && pathConfig.length > 1) {\n                removeScript(id);\n                //Pop off the first array value, since it failed, and\n                //retry\n                pathConfig.shift();\n                context.require.undef(id);\n                context.require([id]);\n                return true;\n            }\n        }\n\n        //Turns a plugin!resource to [plugin, resource]\n        //with the plugin being undefined if the name\n        //did not have a plugin prefix.\n        function splitPrefix(name) {\n            var prefix,\n                index = name ? name.indexOf('!') : -1;\n            if (index > -1) {\n                prefix = name.substring(0, index);\n                name = name.substring(index + 1, name.length);\n            }\n            return [prefix, name];\n        }\n\n        /**\n         * Creates a module mapping that includes plugin prefix, module\n         * name, and path. If parentModuleMap is provided it will\n         * also normalize the name via require.normalize()\n         *\n         * @param {String} name the module name\n         * @param {String} [parentModuleMap] parent module map\n         * for the module name, used to resolve relative names.\n         * @param {Boolean} isNormalized: is the ID already normalized.\n         * This is true if this call is done for a define() module ID.\n         * @param {Boolean} applyMap: apply the map config to the ID.\n         * Should only be true if this map is for a dependency.\n         *\n         * @returns {Object}\n         */\n        function makeModuleMap(name, parentModuleMap, isNormalized, applyMap) {\n            var url, pluginModule, suffix, nameParts,\n                prefix = null,\n                parentName = parentModuleMap ? parentModuleMap.name : null,\n                originalName = name,\n                isDefine = true,\n                normalizedName = '';\n\n            //If no name, then it means it is a require call, generate an\n            //internal name.\n            if (!name) {\n                isDefine = false;\n                name = '_@r' + (requireCounter += 1);\n            }\n\n            nameParts = splitPrefix(name);\n            prefix = nameParts[0];\n            name = nameParts[1];\n\n            if (prefix) {\n                prefix = normalize(prefix, parentName, applyMap);\n                pluginModule = getOwn(defined, prefix);\n            }\n\n            //Account for relative paths if there is a base name.\n            if (name) {\n                if (prefix) {\n                    if (pluginModule && pluginModule.normalize) {\n                        //Plugin is loaded, use its normalize method.\n                        normalizedName = pluginModule.normalize(name, function (name) {\n                            return normalize(name, parentName, applyMap);\n                        });\n                    } else {\n                        normalizedName = normalize(name, parentName, applyMap);\n                    }\n                } else {\n                    //A regular module.\n                    normalizedName = normalize(name, parentName, applyMap);\n\n                    //Normalized name may be a plugin ID due to map config\n                    //application in normalize. The map config values must\n                    //already be normalized, so do not need to redo that part.\n                    nameParts = splitPrefix(normalizedName);\n                    prefix = nameParts[0];\n                    normalizedName = nameParts[1];\n                    isNormalized = true;\n\n                    url = context.nameToUrl(normalizedName);\n                }\n            }\n\n            //If the id is a plugin id that cannot be determined if it needs\n            //normalization, stamp it with a unique ID so two matching relative\n            //ids that may conflict can be separate.\n            suffix = prefix && !pluginModule && !isNormalized ?\n                     '_unnormalized' + (unnormalizedCounter += 1) :\n                     '';\n\n            return {\n                prefix: prefix,\n                name: normalizedName,\n                parentMap: parentModuleMap,\n                unnormalized: !!suffix,\n                url: url,\n                originalName: originalName,\n                isDefine: isDefine,\n                id: (prefix ?\n                        prefix + '!' + normalizedName :\n                        normalizedName) + suffix\n            };\n        }\n\n        function getModule(depMap) {\n            var id = depMap.id,\n                mod = getOwn(registry, id);\n\n            if (!mod) {\n                mod = registry[id] = new context.Module(depMap);\n            }\n\n            return mod;\n        }\n\n        function on(depMap, name, fn) {\n            var id = depMap.id,\n                mod = getOwn(registry, id);\n\n            if (hasProp(defined, id) &&\n                    (!mod || mod.defineEmitComplete)) {\n                if (name === 'defined') {\n                    fn(defined[id]);\n                }\n            } else {\n                getModule(depMap).on(name, fn);\n            }\n        }\n\n        function onError(err, errback) {\n            var ids = err.requireModules,\n                notified = false;\n\n            if (errback) {\n                errback(err);\n            } else {\n                each(ids, function (id) {\n                    var mod = getOwn(registry, id);\n                    if (mod) {\n                        //Set error on module, so it skips timeout checks.\n                        mod.error = err;\n                        if (mod.events.error) {\n                            notified = true;\n                            mod.emit('error', err);\n                        }\n                    }\n                });\n\n                if (!notified) {\n                    req.onError(err);\n                }\n            }\n        }\n\n        /**\n         * Internal method to transfer globalQueue items to this context's\n         * defQueue.\n         */\n        function takeGlobalQueue() {\n            //Push all the globalDefQueue items into the context's defQueue\n            if (globalDefQueue.length) {\n                //Array splice in the values since the context code has a\n                //local var ref to defQueue, so cannot just reassign the one\n                //on context.\n                apsp.apply(defQueue,\n                           [defQueue.length - 1, 0].concat(globalDefQueue));\n                globalDefQueue = [];\n            }\n        }\n\n        handlers = {\n            'require': function (mod) {\n                if (mod.require) {\n                    return mod.require;\n                } else {\n                    return (mod.require = context.makeRequire(mod.map));\n                }\n            },\n            'exports': function (mod) {\n                mod.usingExports = true;\n                if (mod.map.isDefine) {\n                    if (mod.exports) {\n                        return mod.exports;\n                    } else {\n                        return (mod.exports = defined[mod.map.id] = {});\n                    }\n                }\n            },\n            'module': function (mod) {\n                if (mod.module) {\n                    return mod.module;\n                } else {\n                    return (mod.module = {\n                        id: mod.map.id,\n                        uri: mod.map.url,\n                        config: function () {\n                            return (config.config && getOwn(config.config, mod.map.id)) || {};\n                        },\n                        exports: defined[mod.map.id]\n                    });\n                }\n            }\n        };\n\n        function cleanRegistry(id) {\n            //Clean up machinery used for waiting modules.\n            delete registry[id];\n            delete enabledRegistry[id];\n        }\n\n        function breakCycle(mod, traced, processed) {\n            var id = mod.map.id;\n\n            if (mod.error) {\n                mod.emit('error', mod.error);\n            } else {\n                traced[id] = true;\n                each(mod.depMaps, function (depMap, i) {\n                    var depId = depMap.id,\n                        dep = getOwn(registry, depId);\n\n                    //Only force things that have not completed\n                    //being defined, so still in the registry,\n                    //and only if it has not been matched up\n                    //in the module already.\n                    if (dep && !mod.depMatched[i] && !processed[depId]) {\n                        if (getOwn(traced, depId)) {\n                            mod.defineDep(i, defined[depId]);\n                            mod.check(); //pass false?\n                        } else {\n                            breakCycle(dep, traced, processed);\n                        }\n                    }\n                });\n                processed[id] = true;\n            }\n        }\n\n        function checkLoaded() {\n            var map, modId, err, usingPathFallback,\n                waitInterval = config.waitSeconds * 1000,\n                //It is possible to disable the wait interval by using waitSeconds of 0.\n                expired = waitInterval && (context.startTime + waitInterval) < new Date().getTime(),\n                noLoads = [],\n                reqCalls = [],\n                stillLoading = false,\n                needCycleCheck = true;\n\n            //Do not bother if this call was a result of a cycle break.\n            if (inCheckLoaded) {\n                return;\n            }\n\n            inCheckLoaded = true;\n\n            //Figure out the state of all the modules.\n            eachProp(enabledRegistry, function (mod) {\n                map = mod.map;\n                modId = map.id;\n\n                //Skip things that are not enabled or in error state.\n                if (!mod.enabled) {\n                    return;\n                }\n\n                if (!map.isDefine) {\n                    reqCalls.push(mod);\n                }\n\n                if (!mod.error) {\n                    //If the module should be executed, and it has not\n                    //been inited and time is up, remember it.\n                    if (!mod.inited && expired) {\n                        if (hasPathFallback(modId)) {\n                            usingPathFallback = true;\n                            stillLoading = true;\n                        } else {\n                            noLoads.push(modId);\n                            removeScript(modId);\n                        }\n                    } else if (!mod.inited && mod.fetched && map.isDefine) {\n                        stillLoading = true;\n                        if (!map.prefix) {\n                            //No reason to keep looking for unfinished\n                            //loading. If the only stillLoading is a\n                            //plugin resource though, keep going,\n                            //because it may be that a plugin resource\n                            //is waiting on a non-plugin cycle.\n                            return (needCycleCheck = false);\n                        }\n                    }\n                }\n            });\n\n            if (expired && noLoads.length) {\n                //If wait time expired, throw error of unloaded modules.\n                err = makeError('timeout', 'Load timeout for modules: ' + noLoads, null, noLoads);\n                err.contextName = context.contextName;\n                return onError(err);\n            }\n\n            //Not expired, check for a cycle.\n            if (needCycleCheck) {\n                each(reqCalls, function (mod) {\n                    breakCycle(mod, {}, {});\n                });\n            }\n\n            //If still waiting on loads, and the waiting load is something\n            //other than a plugin resource, or there are still outstanding\n            //scripts, then just try back later.\n            if ((!expired || usingPathFallback) && stillLoading) {\n                //Something is still waiting to load. Wait for it, but only\n                //if a timeout is not already in effect.\n                if ((isBrowser || isWebWorker) && !checkLoadedTimeoutId) {\n                    checkLoadedTimeoutId = setTimeout(function () {\n                        checkLoadedTimeoutId = 0;\n                        checkLoaded();\n                    }, 50);\n                }\n            }\n\n            inCheckLoaded = false;\n        }\n\n        Module = function (map) {\n            this.events = getOwn(undefEvents, map.id) || {};\n            this.map = map;\n            this.shim = getOwn(config.shim, map.id);\n            this.depExports = [];\n            this.depMaps = [];\n            this.depMatched = [];\n            this.pluginMaps = {};\n            this.depCount = 0;\n\n            /* this.exports this.factory\n               this.depMaps = [],\n               this.enabled, this.fetched\n            */\n        };\n\n        Module.prototype = {\n            init: function (depMaps, factory, errback, options) {\n                options = options || {};\n\n                //Do not do more inits if already done. Can happen if there\n                //are multiple define calls for the same module. That is not\n                //a normal, common case, but it is also not unexpected.\n                if (this.inited) {\n                    return;\n                }\n\n                this.factory = factory;\n\n                if (errback) {\n                    //Register for errors on this module.\n                    this.on('error', errback);\n                } else if (this.events.error) {\n                    //If no errback already, but there are error listeners\n                    //on this module, set up an errback to pass to the deps.\n                    errback = bind(this, function (err) {\n                        this.emit('error', err);\n                    });\n                }\n\n                //Do a copy of the dependency array, so that\n                //source inputs are not modified. For example\n                //\"shim\" deps are passed in here directly, and\n                //doing a direct modification of the depMaps array\n                //would affect that config.\n                this.depMaps = depMaps && depMaps.slice(0);\n\n                this.errback = errback;\n\n                //Indicate this module has be initialized\n                this.inited = true;\n\n                this.ignore = options.ignore;\n\n                //Could have option to init this module in enabled mode,\n                //or could have been previously marked as enabled. However,\n                //the dependencies are not known until init is called. So\n                //if enabled previously, now trigger dependencies as enabled.\n                if (options.enabled || this.enabled) {\n                    //Enable this module and dependencies.\n                    //Will call this.check()\n                    this.enable();\n                } else {\n                    this.check();\n                }\n            },\n\n            defineDep: function (i, depExports) {\n                //Because of cycles, defined callback for a given\n                //export can be called more than once.\n                if (!this.depMatched[i]) {\n                    this.depMatched[i] = true;\n                    this.depCount -= 1;\n                    this.depExports[i] = depExports;\n                }\n            },\n\n            fetch: function () {\n                if (this.fetched) {\n                    return;\n                }\n                this.fetched = true;\n\n                context.startTime = (new Date()).getTime();\n\n                var map = this.map;\n\n                //If the manager is for a plugin managed resource,\n                //ask the plugin to load it now.\n                if (this.shim) {\n                    context.makeRequire(this.map, {\n                        enableBuildCallback: true\n                    })(this.shim.deps || [], bind(this, function () {\n                        return map.prefix ? this.callPlugin() : this.load();\n                    }));\n                } else {\n                    //Regular dependency.\n                    return map.prefix ? this.callPlugin() : this.load();\n                }\n            },\n\n            load: function () {\n                var url = this.map.url;\n\n                //Regular dependency.\n                if (!urlFetched[url]) {\n                    urlFetched[url] = true;\n                    context.load(this.map.id, url);\n                }\n            },\n\n            /**\n             * Checks if the module is ready to define itself, and if so,\n             * define it.\n             */\n            check: function () {\n                if (!this.enabled || this.enabling) {\n                    return;\n                }\n\n                var err, cjsModule,\n                    id = this.map.id,\n                    depExports = this.depExports,\n                    exports = this.exports,\n                    factory = this.factory;\n\n                if (!this.inited) {\n                    this.fetch();\n                } else if (this.error) {\n                    this.emit('error', this.error);\n                } else if (!this.defining) {\n                    //The factory could trigger another require call\n                    //that would result in checking this module to\n                    //define itself again. If already in the process\n                    //of doing that, skip this work.\n                    this.defining = true;\n\n                    if (this.depCount < 1 && !this.defined) {\n                        if (isFunction(factory)) {\n                            //If there is an error listener, favor passing\n                            //to that instead of throwing an error.\n                            if (this.events.error) {\n                                try {\n                                    exports = context.execCb(id, factory, depExports, exports);\n                                } catch (e) {\n                                    err = e;\n                                }\n                            } else {\n                                exports = context.execCb(id, factory, depExports, exports);\n                            }\n\n                            if (this.map.isDefine) {\n                                //If setting exports via 'module' is in play,\n                                //favor that over return value and exports. After that,\n                                //favor a non-undefined return value over exports use.\n                                cjsModule = this.module;\n                                if (cjsModule &&\n                                        cjsModule.exports !== undefined &&\n                                        //Make sure it is not already the exports value\n                                        cjsModule.exports !== this.exports) {\n                                    exports = cjsModule.exports;\n                                } else if (exports === undefined && this.usingExports) {\n                                    //exports already set the defined value.\n                                    exports = this.exports;\n                                }\n                            }\n\n                            if (err) {\n                                err.requireMap = this.map;\n                                err.requireModules = [this.map.id];\n                                err.requireType = 'define';\n                                return onError((this.error = err));\n                            }\n\n                        } else {\n                            //Just a literal value\n                            exports = factory;\n                        }\n\n                        this.exports = exports;\n\n                        if (this.map.isDefine && !this.ignore) {\n                            defined[id] = exports;\n\n                            if (req.onResourceLoad) {\n                                req.onResourceLoad(context, this.map, this.depMaps);\n                            }\n                        }\n\n                        //Clean up\n                        cleanRegistry(id);\n\n                        this.defined = true;\n                    }\n\n                    //Finished the define stage. Allow calling check again\n                    //to allow define notifications below in the case of a\n                    //cycle.\n                    this.defining = false;\n\n                    if (this.defined && !this.defineEmitted) {\n                        this.defineEmitted = true;\n                        this.emit('defined', this.exports);\n                        this.defineEmitComplete = true;\n                    }\n\n                }\n            },\n\n            callPlugin: function () {\n                var map = this.map,\n                    id = map.id,\n                    //Map already normalized the prefix.\n                    pluginMap = makeModuleMap(map.prefix);\n\n                //Mark this as a dependency for this plugin, so it\n                //can be traced for cycles.\n                this.depMaps.push(pluginMap);\n\n                on(pluginMap, 'defined', bind(this, function (plugin) {\n                    var load, normalizedMap, normalizedMod,\n                        name = this.map.name,\n                        parentName = this.map.parentMap ? this.map.parentMap.name : null,\n                        localRequire = context.makeRequire(map.parentMap, {\n                            enableBuildCallback: true\n                        });\n\n                    //If current map is not normalized, wait for that\n                    //normalized name to load instead of continuing.\n                    if (this.map.unnormalized) {\n                        //Normalize the ID if the plugin allows it.\n                        if (plugin.normalize) {\n                            name = plugin.normalize(name, function (name) {\n                                return normalize(name, parentName, true);\n                            }) || '';\n                        }\n\n                        //prefix and name should already be normalized, no need\n                        //for applying map config again either.\n                        normalizedMap = makeModuleMap(map.prefix + '!' + name,\n                                                      this.map.parentMap);\n                        on(normalizedMap,\n                            'defined', bind(this, function (value) {\n                                this.init([], function () { return value; }, null, {\n                                    enabled: true,\n                                    ignore: true\n                                });\n                            }));\n\n                        normalizedMod = getOwn(registry, normalizedMap.id);\n                        if (normalizedMod) {\n                            //Mark this as a dependency for this plugin, so it\n                            //can be traced for cycles.\n                            this.depMaps.push(normalizedMap);\n\n                            if (this.events.error) {\n                                normalizedMod.on('error', bind(this, function (err) {\n                                    this.emit('error', err);\n                                }));\n                            }\n                            normalizedMod.enable();\n                        }\n\n                        return;\n                    }\n\n                    load = bind(this, function (value) {\n                        this.init([], function () { return value; }, null, {\n                            enabled: true\n                        });\n                    });\n\n                    load.error = bind(this, function (err) {\n                        this.inited = true;\n                        this.error = err;\n                        err.requireModules = [id];\n\n                        //Remove temp unnormalized modules for this module,\n                        //since they will never be resolved otherwise now.\n                        eachProp(registry, function (mod) {\n                            if (mod.map.id.indexOf(id + '_unnormalized') === 0) {\n                                cleanRegistry(mod.map.id);\n                            }\n                        });\n\n                        onError(err);\n                    });\n\n                    //Allow plugins to load other code without having to know the\n                    //context or how to 'complete' the load.\n                    load.fromText = bind(this, function (text, textAlt) {\n                        /*jslint evil: true */\n                        var moduleName = map.name,\n                            moduleMap = makeModuleMap(moduleName),\n                            hasInteractive = useInteractive;\n\n                        //As of 2.1.0, support just passing the text, to reinforce\n                        //fromText only being called once per resource. Still\n                        //support old style of passing moduleName but discard\n                        //that moduleName in favor of the internal ref.\n                        if (textAlt) {\n                            text = textAlt;\n                        }\n\n                        //Turn off interactive script matching for IE for any define\n                        //calls in the text, then turn it back on at the end.\n                        if (hasInteractive) {\n                            useInteractive = false;\n                        }\n\n                        //Prime the system by creating a module instance for\n                        //it.\n                        getModule(moduleMap);\n\n                        //Transfer any config to this other module.\n                        if (hasProp(config.config, id)) {\n                            config.config[moduleName] = config.config[id];\n                        }\n\n                        try {\n                            req.exec(text);\n                        } catch (e) {\n                            return onError(makeError('fromtexteval',\n                                             'fromText eval for ' + id +\n                                            ' failed: ' + e,\n                                             e,\n                                             [id]));\n                        }\n\n                        if (hasInteractive) {\n                            useInteractive = true;\n                        }\n\n                        //Mark this as a dependency for the plugin\n                        //resource\n                        this.depMaps.push(moduleMap);\n\n                        //Support anonymous modules.\n                        context.completeLoad(moduleName);\n\n                        //Bind the value of that module to the value for this\n                        //resource ID.\n                        localRequire([moduleName], load);\n                    });\n\n                    //Use parentName here since the plugin's name is not reliable,\n                    //could be some weird string with no path that actually wants to\n                    //reference the parentName's path.\n                    plugin.load(map.name, localRequire, load, config);\n                }));\n\n                context.enable(pluginMap, this);\n                this.pluginMaps[pluginMap.id] = pluginMap;\n            },\n\n            enable: function () {\n                enabledRegistry[this.map.id] = this;\n                this.enabled = true;\n\n                //Set flag mentioning that the module is enabling,\n                //so that immediate calls to the defined callbacks\n                //for dependencies do not trigger inadvertent load\n                //with the depCount still being zero.\n                this.enabling = true;\n\n                //Enable each dependency\n                each(this.depMaps, bind(this, function (depMap, i) {\n                    var id, mod, handler;\n\n                    if (typeof depMap === 'string') {\n                        //Dependency needs to be converted to a depMap\n                        //and wired up to this module.\n                        depMap = makeModuleMap(depMap,\n                                               (this.map.isDefine ? this.map : this.map.parentMap),\n                                               false,\n                                               !this.skipMap);\n                        this.depMaps[i] = depMap;\n\n                        handler = getOwn(handlers, depMap.id);\n\n                        if (handler) {\n                            this.depExports[i] = handler(this);\n                            return;\n                        }\n\n                        this.depCount += 1;\n\n                        on(depMap, 'defined', bind(this, function (depExports) {\n                            this.defineDep(i, depExports);\n                            this.check();\n                        }));\n\n                        if (this.errback) {\n                            on(depMap, 'error', this.errback);\n                        }\n                    }\n\n                    id = depMap.id;\n                    mod = registry[id];\n\n                    //Skip special modules like 'require', 'exports', 'module'\n                    //Also, don't call enable if it is already enabled,\n                    //important in circular dependency cases.\n                    if (!hasProp(handlers, id) && mod && !mod.enabled) {\n                        context.enable(depMap, this);\n                    }\n                }));\n\n                //Enable each plugin that is used in\n                //a dependency\n                eachProp(this.pluginMaps, bind(this, function (pluginMap) {\n                    var mod = getOwn(registry, pluginMap.id);\n                    if (mod && !mod.enabled) {\n                        context.enable(pluginMap, this);\n                    }\n                }));\n\n                this.enabling = false;\n\n                this.check();\n            },\n\n            on: function (name, cb) {\n                var cbs = this.events[name];\n                if (!cbs) {\n                    cbs = this.events[name] = [];\n                }\n                cbs.push(cb);\n            },\n\n            emit: function (name, evt) {\n                each(this.events[name], function (cb) {\n                    cb(evt);\n                });\n                if (name === 'error') {\n                    //Now that the error handler was triggered, remove\n                    //the listeners, since this broken Module instance\n                    //can stay around for a while in the registry.\n                    delete this.events[name];\n                }\n            }\n        };\n\n        function callGetModule(args) {\n            //Skip modules already defined.\n            if (!hasProp(defined, args[0])) {\n                getModule(makeModuleMap(args[0], null, true)).init(args[1], args[2]);\n            }\n        }\n\n        function removeListener(node, func, name, ieName) {\n            //Favor detachEvent because of IE9\n            //issue, see attachEvent/addEventListener comment elsewhere\n            //in this file.\n            if (node.detachEvent && !isOpera) {\n                //Probably IE. If not it will throw an error, which will be\n                //useful to know.\n                if (ieName) {\n                    node.detachEvent(ieName, func);\n                }\n            } else {\n                node.removeEventListener(name, func, false);\n            }\n        }\n\n        /**\n         * Given an event from a script node, get the requirejs info from it,\n         * and then removes the event listeners on the node.\n         * @param {Event} evt\n         * @returns {Object}\n         */\n        function getScriptData(evt) {\n            //Using currentTarget instead of target for Firefox 2.0's sake. Not\n            //all old browsers will be supported, but this one was easy enough\n            //to support and still makes sense.\n            var node = evt.currentTarget || evt.srcElement;\n\n            //Remove the listeners once here.\n            removeListener(node, context.onScriptLoad, 'load', 'onreadystatechange');\n            removeListener(node, context.onScriptError, 'error');\n\n            return {\n                node: node,\n                id: node && node.getAttribute('data-requiremodule')\n            };\n        }\n\n        function intakeDefines() {\n            var args;\n\n            //Any defined modules in the global queue, intake them now.\n            takeGlobalQueue();\n\n            //Make sure any remaining defQueue items get properly processed.\n            while (defQueue.length) {\n                args = defQueue.shift();\n                if (args[0] === null) {\n                    return onError(makeError('mismatch', 'Mismatched anonymous define() module: ' + args[args.length - 1]));\n                } else {\n                    //args are id, deps, factory. Should be normalized by the\n                    //define() function.\n                    callGetModule(args);\n                }\n            }\n        }\n\n        context = {\n            config: config,\n            contextName: contextName,\n            registry: registry,\n            defined: defined,\n            urlFetched: urlFetched,\n            defQueue: defQueue,\n            Module: Module,\n            makeModuleMap: makeModuleMap,\n            nextTick: req.nextTick,\n            onError: onError,\n\n            /**\n             * Set a configuration for the context.\n             * @param {Object} cfg config object to integrate.\n             */\n            configure: function (cfg) {\n                //Make sure the baseUrl ends in a slash.\n                if (cfg.baseUrl) {\n                    if (cfg.baseUrl.charAt(cfg.baseUrl.length - 1) !== '/') {\n                        cfg.baseUrl += '/';\n                    }\n                }\n\n                //Save off the paths and packages since they require special processing,\n                //they are additive.\n                var pkgs = config.pkgs,\n                    shim = config.shim,\n                    objs = {\n                        paths: true,\n                        config: true,\n                        map: true\n                    };\n\n                eachProp(cfg, function (value, prop) {\n                    if (objs[prop]) {\n                        if (prop === 'map') {\n                            if (!config.map) {\n                                config.map = {};\n                            }\n                            mixin(config[prop], value, true, true);\n                        } else {\n                            mixin(config[prop], value, true);\n                        }\n                    } else {\n                        config[prop] = value;\n                    }\n                });\n\n                //Merge shim\n                if (cfg.shim) {\n                    eachProp(cfg.shim, function (value, id) {\n                        //Normalize the structure\n                        if (isArray(value)) {\n                            value = {\n                                deps: value\n                            };\n                        }\n                        if ((value.exports || value.init) && !value.exportsFn) {\n                            value.exportsFn = context.makeShimExports(value);\n                        }\n                        shim[id] = value;\n                    });\n                    config.shim = shim;\n                }\n\n                //Adjust packages if necessary.\n                if (cfg.packages) {\n                    each(cfg.packages, function (pkgObj) {\n                        var location;\n\n                        pkgObj = typeof pkgObj === 'string' ? { name: pkgObj } : pkgObj;\n                        location = pkgObj.location;\n\n                        //Create a brand new object on pkgs, since currentPackages can\n                        //be passed in again, and config.pkgs is the internal transformed\n                        //state for all package configs.\n                        pkgs[pkgObj.name] = {\n                            name: pkgObj.name,\n                            location: location || pkgObj.name,\n                            //Remove leading dot in main, so main paths are normalized,\n                            //and remove any trailing .js, since different package\n                            //envs have different conventions: some use a module name,\n                            //some use a file name.\n                            main: (pkgObj.main || 'main')\n                                  .replace(currDirRegExp, '')\n                                  .replace(jsSuffixRegExp, '')\n                        };\n                    });\n\n                    //Done with modifications, assing packages back to context config\n                    config.pkgs = pkgs;\n                }\n\n                //If there are any \"waiting to execute\" modules in the registry,\n                //update the maps for them, since their info, like URLs to load,\n                //may have changed.\n                eachProp(registry, function (mod, id) {\n                    //If module already has init called, since it is too\n                    //late to modify them, and ignore unnormalized ones\n                    //since they are transient.\n                    if (!mod.inited && !mod.map.unnormalized) {\n                        mod.map = makeModuleMap(id);\n                    }\n                });\n\n                //If a deps array or a config callback is specified, then call\n                //require with those args. This is useful when require is defined as a\n                //config object before require.js is loaded.\n                if (cfg.deps || cfg.callback) {\n                    context.require(cfg.deps || [], cfg.callback);\n                }\n            },\n\n            makeShimExports: function (value) {\n                function fn() {\n                    var ret;\n                    if (value.init) {\n                        ret = value.init.apply(global, arguments);\n                    }\n                    return ret || (value.exports && getGlobal(value.exports));\n                }\n                return fn;\n            },\n\n            makeRequire: function (relMap, options) {\n                options = options || {};\n\n                function localRequire(deps, callback, errback) {\n                    var id, map, requireMod;\n\n                    if (options.enableBuildCallback && callback && isFunction(callback)) {\n                        callback.__requireJsBuild = true;\n                    }\n\n                    if (typeof deps === 'string') {\n                        if (isFunction(callback)) {\n                            //Invalid call\n                            return onError(makeError('requireargs', 'Invalid require call'), errback);\n                        }\n\n                        //If require|exports|module are requested, get the\n                        //value for them from the special handlers. Caveat:\n                        //this only works while module is being defined.\n                        if (relMap && hasProp(handlers, deps)) {\n                            return handlers[deps](registry[relMap.id]);\n                        }\n\n                        //Synchronous access to one module. If require.get is\n                        //available (as in the Node adapter), prefer that.\n                        if (req.get) {\n                            return req.get(context, deps, relMap, localRequire);\n                        }\n\n                        //Normalize module name, if it contains . or ..\n                        map = makeModuleMap(deps, relMap, false, true);\n                        id = map.id;\n\n                        if (!hasProp(defined, id)) {\n                            return onError(makeError('notloaded', 'Module name \"' +\n                                        id +\n                                        '\" has not been loaded yet for context: ' +\n                                        contextName +\n                                        (relMap ? '' : '. Use require([])')));\n                        }\n                        return defined[id];\n                    }\n\n                    //Grab defines waiting in the global queue.\n                    intakeDefines();\n\n                    //Mark all the dependencies as needing to be loaded.\n                    context.nextTick(function () {\n                        //Some defines could have been added since the\n                        //require call, collect them.\n                        intakeDefines();\n\n                        requireMod = getModule(makeModuleMap(null, relMap));\n\n                        //Store if map config should be applied to this require\n                        //call for dependencies.\n                        requireMod.skipMap = options.skipMap;\n\n                        requireMod.init(deps, callback, errback, {\n                            enabled: true\n                        });\n\n                        checkLoaded();\n                    });\n\n                    return localRequire;\n                }\n\n                mixin(localRequire, {\n                    isBrowser: isBrowser,\n\n                    /**\n                     * Converts a module name + .extension into an URL path.\n                     * *Requires* the use of a module name. It does not support using\n                     * plain URLs like nameToUrl.\n                     */\n                    toUrl: function (moduleNamePlusExt) {\n                        var ext,\n                            index = moduleNamePlusExt.lastIndexOf('.'),\n                            segment = moduleNamePlusExt.split('/')[0],\n                            isRelative = segment === '.' || segment === '..';\n\n                        //Have a file extension alias, and it is not the\n                        //dots from a relative path.\n                        if (index !== -1 && (!isRelative || index > 1)) {\n                            ext = moduleNamePlusExt.substring(index, moduleNamePlusExt.length);\n                            moduleNamePlusExt = moduleNamePlusExt.substring(0, index);\n                        }\n\n                        return context.nameToUrl(normalize(moduleNamePlusExt,\n                                                relMap && relMap.id, true), ext,  true);\n                    },\n\n                    defined: function (id) {\n                        return hasProp(defined, makeModuleMap(id, relMap, false, true).id);\n                    },\n\n                    specified: function (id) {\n                        id = makeModuleMap(id, relMap, false, true).id;\n                        return hasProp(defined, id) || hasProp(registry, id);\n                    }\n                });\n\n                //Only allow undef on top level require calls\n                if (!relMap) {\n                    localRequire.undef = function (id) {\n                        //Bind any waiting define() calls to this context,\n                        //fix for #408\n                        takeGlobalQueue();\n\n                        var map = makeModuleMap(id, relMap, true),\n                            mod = getOwn(registry, id);\n\n                        delete defined[id];\n                        delete urlFetched[map.url];\n                        delete undefEvents[id];\n\n                        if (mod) {\n                            //Hold on to listeners in case the\n                            //module will be attempted to be reloaded\n                            //using a different config.\n                            if (mod.events.defined) {\n                                undefEvents[id] = mod.events;\n                            }\n\n                            cleanRegistry(id);\n                        }\n                    };\n                }\n\n                return localRequire;\n            },\n\n            /**\n             * Called to enable a module if it is still in the registry\n             * awaiting enablement. A second arg, parent, the parent module,\n             * is passed in for context, when this method is overriden by\n             * the optimizer. Not shown here to keep code compact.\n             */\n            enable: function (depMap) {\n                var mod = getOwn(registry, depMap.id);\n                if (mod) {\n                    getModule(depMap).enable();\n                }\n            },\n\n            /**\n             * Internal method used by environment adapters to complete a load event.\n             * A load event could be a script load or just a load pass from a synchronous\n             * load call.\n             * @param {String} moduleName the name of the module to potentially complete.\n             */\n            completeLoad: function (moduleName) {\n                var found, args, mod,\n                    shim = getOwn(config.shim, moduleName) || {},\n                    shExports = shim.exports;\n\n                takeGlobalQueue();\n\n                while (defQueue.length) {\n                    args = defQueue.shift();\n                    if (args[0] === null) {\n                        args[0] = moduleName;\n                        //If already found an anonymous module and bound it\n                        //to this name, then this is some other anon module\n                        //waiting for its completeLoad to fire.\n                        if (found) {\n                            break;\n                        }\n                        found = true;\n                    } else if (args[0] === moduleName) {\n                        //Found matching define call for this script!\n                        found = true;\n                    }\n\n                    callGetModule(args);\n                }\n\n                //Do this after the cycle of callGetModule in case the result\n                //of those calls/init calls changes the registry.\n                mod = getOwn(registry, moduleName);\n\n                if (!found && !hasProp(defined, moduleName) && mod && !mod.inited) {\n                    if (config.enforceDefine && (!shExports || !getGlobal(shExports))) {\n                        if (hasPathFallback(moduleName)) {\n                            return;\n                        } else {\n                            return onError(makeError('nodefine',\n                                             'No define call for ' + moduleName,\n                                             null,\n                                             [moduleName]));\n                        }\n                    } else {\n                        //A script that does not call define(), so just simulate\n                        //the call for it.\n                        callGetModule([moduleName, (shim.deps || []), shim.exportsFn]);\n                    }\n                }\n\n                checkLoaded();\n            },\n\n            /**\n             * Converts a module name to a file path. Supports cases where\n             * moduleName may actually be just an URL.\n             * Note that it **does not** call normalize on the moduleName,\n             * it is assumed to have already been normalized. This is an\n             * internal API, not a public one. Use toUrl for the public API.\n             */\n            nameToUrl: function (moduleName, ext, skipExt) {\n                var paths, pkgs, pkg, pkgPath, syms, i, parentModule, url,\n                    parentPath;\n\n                //If a colon is in the URL, it indicates a protocol is used and it is just\n                //an URL to a file, or if it starts with a slash, contains a query arg (i.e. ?)\n                //or ends with .js, then assume the user meant to use an url and not a module id.\n                //The slash is important for protocol-less URLs as well as full paths.\n                if (req.jsExtRegExp.test(moduleName)) {\n                    //Just a plain path, not module name lookup, so just return it.\n                    //Add extension if it is included. This is a bit wonky, only non-.js things pass\n                    //an extension, this method probably needs to be reworked.\n                    url = moduleName + (ext || '');\n                } else {\n                    //A module that needs to be converted to a path.\n                    paths = config.paths;\n                    pkgs = config.pkgs;\n\n                    syms = moduleName.split('/');\n                    //For each module name segment, see if there is a path\n                    //registered for it. Start with most specific name\n                    //and work up from it.\n                    for (i = syms.length; i > 0; i -= 1) {\n                        parentModule = syms.slice(0, i).join('/');\n                        pkg = getOwn(pkgs, parentModule);\n                        parentPath = getOwn(paths, parentModule);\n                        if (parentPath) {\n                            //If an array, it means there are a few choices,\n                            //Choose the one that is desired\n                            if (isArray(parentPath)) {\n                                parentPath = parentPath[0];\n                            }\n                            syms.splice(0, i, parentPath);\n                            break;\n                        } else if (pkg) {\n                            //If module name is just the package name, then looking\n                            //for the main module.\n                            if (moduleName === pkg.name) {\n                                pkgPath = pkg.location + '/' + pkg.main;\n                            } else {\n                                pkgPath = pkg.location;\n                            }\n                            syms.splice(0, i, pkgPath);\n                            break;\n                        }\n                    }\n\n                    //Join the path parts together, then figure out if baseUrl is needed.\n                    url = syms.join('/');\n                    url += (ext || (/\\?/.test(url) || skipExt ? '' : '.js'));\n                    url = (url.charAt(0) === '/' || url.match(/^[\\w\\+\\.\\-]+:/) ? '' : config.baseUrl) + url;\n                }\n\n                return config.urlArgs ? url +\n                                        ((url.indexOf('?') === -1 ? '?' : '&') +\n                                         config.urlArgs) : url;\n            },\n\n            //Delegates to req.load. Broken out as a separate function to\n            //allow overriding in the optimizer.\n            load: function (id, url) {\n                req.load(context, id, url);\n            },\n\n            /**\n             * Executes a module callack function. Broken out as a separate function\n             * solely to allow the build system to sequence the files in the built\n             * layer in the right sequence.\n             *\n             * @private\n             */\n            execCb: function (name, callback, args, exports) {\n                return callback.apply(exports, args);\n            },\n\n            /**\n             * callback for script loads, used to check status of loading.\n             *\n             * @param {Event} evt the event from the browser for the script\n             * that was loaded.\n             */\n            onScriptLoad: function (evt) {\n                //Using currentTarget instead of target for Firefox 2.0's sake. Not\n                //all old browsers will be supported, but this one was easy enough\n                //to support and still makes sense.\n                if (evt.type === 'load' ||\n                        (readyRegExp.test((evt.currentTarget || evt.srcElement).readyState))) {\n                    //Reset interactive script so a script node is not held onto for\n                    //to long.\n                    interactiveScript = null;\n\n                    //Pull out the name of the module and the context.\n                    var data = getScriptData(evt);\n                    context.completeLoad(data.id);\n                }\n            },\n\n            /**\n             * Callback for script errors.\n             */\n            onScriptError: function (evt) {\n                var data = getScriptData(evt);\n                if (!hasPathFallback(data.id)) {\n                    return onError(makeError('scripterror', 'Script error', evt, [data.id]));\n                }\n            }\n        };\n\n        context.require = context.makeRequire();\n        return context;\n    }\n\n    /**\n     * Main entry point.\n     *\n     * If the only argument to require is a string, then the module that\n     * is represented by that string is fetched for the appropriate context.\n     *\n     * If the first argument is an array, then it will be treated as an array\n     * of dependency string names to fetch. An optional function callback can\n     * be specified to execute when all of those dependencies are available.\n     *\n     * Make a local req variable to help Caja compliance (it assumes things\n     * on a require that are not standardized), and to give a short\n     * name for minification/local scope use.\n     */\n    req = requirejs = function (deps, callback, errback, optional) {\n\n        //Find the right context, use default\n        var context, config,\n            contextName = defContextName;\n\n        // Determine if have config object in the call.\n        if (!isArray(deps) && typeof deps !== 'string') {\n            // deps is a config object\n            config = deps;\n            if (isArray(callback)) {\n                // Adjust args if there are dependencies\n                deps = callback;\n                callback = errback;\n                errback = optional;\n            } else {\n                deps = [];\n            }\n        }\n\n        if (config && config.context) {\n            contextName = config.context;\n        }\n\n        context = getOwn(contexts, contextName);\n        if (!context) {\n            context = contexts[contextName] = req.s.newContext(contextName);\n        }\n\n        if (config) {\n            context.configure(config);\n        }\n\n        return context.require(deps, callback, errback);\n    };\n\n    /**\n     * Support require.config() to make it easier to cooperate with other\n     * AMD loaders on globally agreed names.\n     */\n    req.config = function (config) {\n        return req(config);\n    };\n\n    /**\n     * Execute something after the current tick\n     * of the event loop. Override for other envs\n     * that have a better solution than setTimeout.\n     * @param  {Function} fn function to execute later.\n     */\n    req.nextTick = typeof setTimeout !== 'undefined' ? function (fn) {\n        setTimeout(fn, 4);\n    } : function (fn) { fn(); };\n\n    /**\n     * Export require as a global, but only if it does not already exist.\n     */\n    if (!require) {\n        require = req;\n    }\n\n    req.version = version;\n\n    //Used to filter out dependencies that are already paths.\n    req.jsExtRegExp = /^\\/|:|\\?|\\.js$/;\n    req.isBrowser = isBrowser;\n    s = req.s = {\n        contexts: contexts,\n        newContext: newContext\n    };\n\n    //Create default context.\n    req({});\n\n    //Exports some context-sensitive methods on global require.\n    each([\n        'toUrl',\n        'undef',\n        'defined',\n        'specified'\n    ], function (prop) {\n        //Reference from contexts instead of early binding to default context,\n        //so that during builds, the latest instance of the default context\n        //with its config gets used.\n        req[prop] = function () {\n            var ctx = contexts[defContextName];\n            return ctx.require[prop].apply(ctx, arguments);\n        };\n    });\n\n    if (isBrowser) {\n        head = s.head = document.getElementsByTagName('head')[0];\n        //If BASE tag is in play, using appendChild is a problem for IE6.\n        //When that browser dies, this can be removed. Details in this jQuery bug:\n        //http://dev.jquery.com/ticket/2709\n        baseElement = document.getElementsByTagName('base')[0];\n        if (baseElement) {\n            head = s.head = baseElement.parentNode;\n        }\n    }\n\n    /**\n     * Any errors that require explicitly generates will be passed to this\n     * function. Intercept/override it if you want custom error handling.\n     * @param {Error} err the error object.\n     */\n    req.onError = function (err) {\n        throw err;\n    };\n\n    /**\n     * Does the request to load a module for the browser case.\n     * Make this a separate function to allow other environments\n     * to override it.\n     *\n     * @param {Object} context the require context to find state.\n     * @param {String} moduleName the name of the module.\n     * @param {Object} url the URL to the module.\n     */\n    req.load = function (context, moduleName, url) {\n        var config = (context && context.config) || {},\n            node;\n        if (isBrowser) {\n            //In the browser so use a script tag\n            node = config.xhtml ?\n                    document.createElementNS('http://www.w3.org/1999/xhtml', 'html:script') :\n                    document.createElement('script');\n            node.type = config.scriptType || 'text/javascript';\n            node.charset = 'utf-8';\n            node.async = true;\n\n            node.setAttribute('data-requirecontext', context.contextName);\n            node.setAttribute('data-requiremodule', moduleName);\n\n            //Set up load listener. Test attachEvent first because IE9 has\n            //a subtle issue in its addEventListener and script onload firings\n            //that do not match the behavior of all other browsers with\n            //addEventListener support, which fire the onload event for a\n            //script right after the script execution. See:\n            //https://connect.microsoft.com/IE/feedback/details/648057/script-onload-event-is-not-fired-immediately-after-script-execution\n            //UNFORTUNATELY Opera implements attachEvent but does not follow the script\n            //script execution mode.\n            if (node.attachEvent &&\n                    //Check if node.attachEvent is artificially added by custom script or\n                    //natively supported by browser\n                    //read https://github.com/jrburke/requirejs/issues/187\n                    //if we can NOT find [native code] then it must NOT natively supported.\n                    //in IE8, node.attachEvent does not have toString()\n                    //Note the test for \"[native code\" with no closing brace, see:\n                    //https://github.com/jrburke/requirejs/issues/273\n                    !(node.attachEvent.toString && node.attachEvent.toString().indexOf('[native code') < 0) &&\n                    !isOpera) {\n                //Probably IE. IE (at least 6-8) do not fire\n                //script onload right after executing the script, so\n                //we cannot tie the anonymous define call to a name.\n                //However, IE reports the script as being in 'interactive'\n                //readyState at the time of the define call.\n                useInteractive = true;\n\n                node.attachEvent('onreadystatechange', context.onScriptLoad);\n                //It would be great to add an error handler here to catch\n                //404s in IE9+. However, onreadystatechange will fire before\n                //the error handler, so that does not help. If addEventListener\n                //is used, then IE will fire error before load, but we cannot\n                //use that pathway given the connect.microsoft.com issue\n                //mentioned above about not doing the 'script execute,\n                //then fire the script load event listener before execute\n                //next script' that other browsers do.\n                //Best hope: IE10 fixes the issues,\n                //and then destroys all installs of IE 6-9.\n                //node.attachEvent('onerror', context.onScriptError);\n            } else {\n                node.addEventListener('load', context.onScriptLoad, false);\n                node.addEventListener('error', context.onScriptError, false);\n            }\n            node.src = url;\n\n            //For some cache cases in IE 6-8, the script executes before the end\n            //of the appendChild execution, so to tie an anonymous define\n            //call to the module name (which is stored on the node), hold on\n            //to a reference to this node, but clear after the DOM insertion.\n            currentlyAddingScript = node;\n            if (baseElement) {\n                head.insertBefore(node, baseElement);\n            } else {\n                head.appendChild(node);\n            }\n            currentlyAddingScript = null;\n\n            return node;\n        } else if (isWebWorker) {\n            try {\n                //In a web worker, use importScripts. This is not a very\n                //efficient use of importScripts, importScripts will block until\n                //its script is downloaded and evaluated. However, if web workers\n                //are in play, the expectation that a build has been done so that\n                //only one script needs to be loaded anyway. This may need to be\n                //reevaluated if other use cases become common.\n                importScripts(url);\n\n                //Account for anonymous modules\n                context.completeLoad(moduleName);\n            } catch (e) {\n                context.onError(makeError('importscripts',\n                                'importScripts failed for ' +\n                                    moduleName + ' at ' + url,\n                                e,\n                                [moduleName]));\n            }\n        }\n    };\n\n    function getInteractiveScript() {\n        if (interactiveScript && interactiveScript.readyState === 'interactive') {\n            return interactiveScript;\n        }\n\n        eachReverse(scripts(), function (script) {\n            if (script.readyState === 'interactive') {\n                return (interactiveScript = script);\n            }\n        });\n        return interactiveScript;\n    }\n\n    //Look for a data-main script attribute, which could also adjust the baseUrl.\n    if (isBrowser) {\n        //Figure out baseUrl. Get it from the script tag with require.js in it.\n        eachReverse(scripts(), function (script) {\n            //Set the 'head' where we can append children by\n            //using the script's parent.\n            if (!head) {\n                head = script.parentNode;\n            }\n\n            //Look for a data-main attribute to set main script for the page\n            //to load. If it is there, the path to data main becomes the\n            //baseUrl, if it is not already set.\n            dataMain = script.getAttribute('data-main');\n            if (dataMain) {\n                //Set final baseUrl if there is not already an explicit one.\n                if (!cfg.baseUrl) {\n                    //Pull off the directory of data-main for use as the\n                    //baseUrl.\n                    src = dataMain.split('/');\n                    mainScript = src.pop();\n                    subPath = src.length ? src.join('/')  + '/' : './';\n\n                    cfg.baseUrl = subPath;\n                    dataMain = mainScript;\n                }\n\n                //Strip off any trailing .js since dataMain is now\n                //like a module name.\n                dataMain = dataMain.replace(jsSuffixRegExp, '');\n\n                //Put the data-main script in the files to load.\n                cfg.deps = cfg.deps ? cfg.deps.concat(dataMain) : [dataMain];\n\n                return true;\n            }\n        });\n    }\n\n    /**\n     * The function that handles definitions of modules. Differs from\n     * require() in that a string for the module should be the first argument,\n     * and the function to execute after dependencies are loaded should\n     * return a value to define the module corresponding to the first argument's\n     * name.\n     */\n    define = function (name, deps, callback) {\n        var node, context;\n\n        //Allow for anonymous modules\n        if (typeof name !== 'string') {\n            //Adjust args appropriately\n            callback = deps;\n            deps = name;\n            name = null;\n        }\n\n        //This module may not have dependencies\n        if (!isArray(deps)) {\n            callback = deps;\n            deps = [];\n        }\n\n        //If no name, and callback is a function, then figure out if it a\n        //CommonJS thing with dependencies.\n        if (!deps.length && isFunction(callback)) {\n            //Remove comments from the callback string,\n            //look for require calls, and pull them into the dependencies,\n            //but only if there are function args.\n            if (callback.length) {\n                callback\n                    .toString()\n                    .replace(commentRegExp, '')\n                    .replace(cjsRequireRegExp, function (match, dep) {\n                        deps.push(dep);\n                    });\n\n                //May be a CommonJS thing even without require calls, but still\n                //could use exports, and module. Avoid doing exports and module\n                //work though if it just needs require.\n                //REQUIRES the function to expect the CommonJS variables in the\n                //order listed below.\n                deps = (callback.length === 1 ? ['require'] : ['require', 'exports', 'module']).concat(deps);\n            }\n        }\n\n        //If in IE 6-8 and hit an anonymous define() call, do the interactive\n        //work.\n        if (useInteractive) {\n            node = currentlyAddingScript || getInteractiveScript();\n            if (node) {\n                if (!name) {\n                    name = node.getAttribute('data-requiremodule');\n                }\n                context = contexts[node.getAttribute('data-requirecontext')];\n            }\n        }\n\n        //Always save off evaluating the def call until the script onload handler.\n        //This allows multiple modules to be in a file without prematurely\n        //tracing dependencies, and allows for anonymous module support,\n        //where the module name is not known until the script onload event\n        //occurs. If no context, use the global queue, and get it processed\n        //in the onscript load callback.\n        (context ? context.defQueue : globalDefQueue).push([name, deps, callback]);\n    };\n\n    define.amd = {\n        jQuery: true\n    };\n\n\n    /**\n     * Executes the text. Normally just uses eval, but can be modified\n     * to use a better, environment-specific call. Only used for transpiling\n     * loader plugins, not for plain JS modules.\n     * @param {String} text the text to execute/evaluate.\n     */\n    req.exec = function (text) {\n        /*jslint evil: true */\n        return eval(text);\n    };\n\n    //Set up with config info.\n    req(cfg);\n}(this));\n"]}