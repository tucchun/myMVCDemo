{"version":3,"sources":["assets/lib/backbone/backbone.controller-1.0.js"],"names":["_extendMethodGenerator","klass","_inheritedMethodsDefinition","properties","name","_","extend","tmpControllerProperties","BackboneMVC","Controller","actionMethods","secureActions","each","value","propertyName","indexOf","systemActions","match","shortName","replace","_actions","_secureActions","_controllerClass","ControllerSingleton","prototype","constructor","__super__","ControllersPool","isDeferred","suspiciousObject","isObject","promise","assertDeferredByResult","deferred","result","camelCased","string","map","split","entry","toUpperCase","join","underscored","toLowerCase","$","$1","$2","invokeAction","controllerName","action","_arguments","controller","hooksParameters","concat","Deferred","beforeFilter","apply","pipe","checkSession","afterRender","addHistoryEntry","router","controller_name","_history","length","last","push","PRODUCT_NAME","Backbone","window","BaseController","this","_created","Date","getTime","instance","undefined","arguments","initialize","classId","uniqueId","namespace","namespaceString","components","node","i","l","resolve","default","Router","_routes","routes","_inherentRouterProperties","*components","dispatch","actionPath","rest","View","Model","getLastAction","navigate","fragment","options","trigger","_options","call","RouterClass","__fetchSuccessCallback","__fetchErrorCallback","fetch","success","model","resp","tmp","error","parse","response","data","bind"],"mappings":"CA2DA,WACE,YAiSA,SAASA,GAAuBC,EAAOC,GAEnC,MAAO,UAAUC,GACb,GAAIC,GAAOD,EAAWC,IACtB,IAAoB,mBAATA,GACP,KAAM,+BAIVD,GAAaE,EAAEC,UAAWJ,EAA6BC,EAGvD,IAAII,GAA0BF,EAAEC,UAAWE,EAAYC,YAEnDC,KAAoBC,IAExBN,GAAEO,KAAKT,EAAY,SAAUU,EAAOC,GAGhC,GAFAP,EAAwBO,GAAgBD,EAEnB,kBAAVA,IAA4C,MAApBC,EAAa,IAC5CT,EAAEU,QAAQC,EAAeF,IAAiB,EAC1C,OAAO,CAIX,IADAJ,EAAcI,GAAgBD,EAC1BC,EAAaG,MAAM,WAAY,CAC/BN,EAAcG,GAAgBD,CAG9B,IAAIK,GAAYJ,EAAaK,QAAQ,UAAW,GACX,mBAA1BhB,GAAWe,KAElBP,EAAcO,GAAaL,EAC3BH,EAAcQ,GAAaL,MAOvCR,EAAEC,OAAOC,EAAyBG,GAC9BU,SAASV,EACTW,eAAeV,IAGf,UAAYJ,UACLA,GAAwBD,MAGnC,IAAIgB,GAAmBC,EAAoBjB,OAAOC,EAUlD,OARAF,GAAEC,OAAOgB,GACLhB,OAAON,EAAuBsB,EAAkBjB,EAAEC,UAAWJ,EAA6BC,MAG9FmB,EAAiBE,UAAUC,YAAYC,UAAYzB,EAAMuB,UAEzDG,EAAgBvB,GAAQkB,EAEjBA,GAaf,QAASM,GAAWC,GAEhB,MAAOxB,GAAEyB,SAASD,IAAqBA,EAAiBE,SAChB,kBAA7BF,GAAiBE,QAUhC,QAASC,GAAuBC,EAAUC,GAItC,MAHsB,mBAAXA,KACPA,GAAS,GAEND,EAASC,EAAS,UAAY,UAAUA,GAQnD,QAASC,GAAWC,GAChB,MAAsB,gBAAXA,GACA,MAEXA,EAASA,EAAOjB,QAAQ,UAAW,KAE3Bd,EAAEgC,IAAID,EAAOE,MAAM,KAAM,SAAUC,GACvC,MAAOA,GAAMpB,QAAQ,eAAe,SAAUF,GAC1C,MAAOA,GAAMuB,gBACdrB,QAAQ,KAAM,MACjBsB,KAAK,MASb,QAASC,GAAYN,GACjB,MAAsB,gBAAXA,GACA,MAEXA,EAASA,EAAOjB,QAAQ,UAAW,KAE3Bd,EAAEgC,IAAID,EAAOE,MAAM,KAAM,SAAUC,GACvC,MAAOA,GAAMpB,QAAQ,UAAW,SAAUF,GACtC,MAAOA,GAAM0B,gBAEZxB,QAAQ,kBAAmB,SAAUyB,EAAGC,EAAIC,GACzC,MAAOD,GAAK,IAAMC,EAAGH,kBAE7BF,KAAK,MAWb,QAASM,GAAaC,EAAgBC,EAAQC,GAC1C,GAAIC,GAAa,GAAIxB,GAAgBqB,GAEjCI,GAAmBH,GAAQI,OAAOH,GAClCjB,EAAWW,EAAEU,WAEbpB,EAASiB,EAAWI,aAAaC,MAAML,EAAYC,EA0CvD,OAzCIxB,GAAWM,GACXD,EAAWC,EAEXF,EAAuBC,EAAUC,GAIY,kBAAtCiB,GAAW9B,eAAe4B,KAEjChB,EAAWA,EAASwB,KAAK,WACrB,GAAIvB,GAASiB,EAAWO,aAAaF,MAAML,EAAYD,EAEvD,OAAItB,GAAWM,GACJA,EAEAF,EAAuBY,EAAEU,WAAYpB,MAMxDD,EAAWA,EAASwB,KAAK,WACrB,GAAIvB,GAASiB,EAAWF,GAAQO,MAAML,EAAYD,EAElD,OAAItB,GAAWM,GACJA,EAEAF,EAAuBY,EAAEU,WAAYpB,KAKpDD,EAAWA,EAASwB,KAAK,WACrB,GAAIvB,GAASiB,EAAWQ,YAAYH,MAAML,EAAYC,EACtD,OAAIxB,GAAWM,GACJA,EAEAF,EAAuBY,EAAEU,WAAYpB,KAOxD,QAAS0B,GAAgBC,EAAQC,EAAiBb,EAAQC,GAClDW,EAAOE,SAASC,OAAS,MACzBH,EAAOE,SAAW1D,EAAE4D,KAAKJ,EAAOE,SAAU,MAE9CF,EAAOE,SAASG,MAAMJ,EAAiBb,EAAQC,IAnenD,GAAIiB,GAAe,aAGnB,IAAwB,mBAAbC,WAAyC,mBAAN/D,GAA9C,CAOA,GAAIG,GAAc6D,OAAOF,MAcrB5C,EAAuB,WACvB,QAAS+C,KACLC,KAAKC,UAAW,GAAKC,OAAQC,UAiCjC,MA9BArE,GAAEC,OAAOgE,EAAe9C,WACpBgD,SAAS,OAGbF,EAAehE,OAAS,SAAUH,GAC9B,GAAIwE,GACA1E,EAAQ,WACR,MAAiB2E,UAAbD,EACOA,GAEXL,EAAed,MAAMe,KAAMM,WAIHD,SAApBL,KAAKO,YACLP,KAAKO,WAAWtB,MAAMe,KAAMM,WAGhCF,EAAWJ,MAUf,OANAtE,GAAMuB,UAAY,GAAI8C,GACtBjE,EAAEC,OAAOL,EAAMuB,UAAWrB,GAE1BF,EAAMuB,UAAUC,YAAcxB,EAC9BA,EAAMuB,UAAUuD,QAAU1E,EAAE2E,SAAS,eAE9B/E,GAEJqE,IAGXjE,GAAEC,OAAOE,GAMLyE,UAAU,SAAUC,GAGhB,IAAK,GAFDC,GAAaD,EAAgB5C,MAAM,KACnC8C,EAAOf,OACFgB,EAAI,EAAGC,EAAIH,EAAWnB,OAAQqB,EAAIC,EAAGD,IACdT,SAAxBQ,EAAKD,EAAWE,MAChBD,EAAKD,EAAWE,QAEpBD,EAAOA,EAAKD,EAAWE,KAS/B5E,YACI8C,aAAa,WACT,MAAOX,GAAEU,WAAWiC,WAGxB5B,YAAY,WACR,MAAOf,GAAEU,WAAWiC,WAGxB7B,aAAa,WAET,MAAOd,GAAEU,WAAWiC,SAAQ,IAGhCC,QAAU,WAGN,OAAO,IASfC,OAAO,WA+EH,QAASnF,GAAOH,GACZ,GAAIuF,GAAUrF,EAAEC,OAAOH,EAAWwF,WAAcC,EAA0BD,OAC1E,OAAOvB,UAASqB,OAAOnF,OAAOD,EAAEC,OAAOH,EAAYyF,GAA6BD,OAAQD,KAhF5F,GAAIE,IACA7B,YACApC,mBACAgE,QACIE,cAAc,YAGlBC,SAAS,SAAUC,GACf,GACI/C,GADAmC,EAAaY,EAAW5E,QAAQ,QAAS,IAAImB,MAAM,IAInDX,GAAgBwD,EAAW,IAC3BnC,EAAiBmC,EAAW,GACiC,mBAA/CxD,GAAgBQ,EAAWgD,EAAW,KACpDnC,EAAiBb,EAAWgD,EAAW,IACuB,mBAAhDxD,GAAgBe,EAAYyC,EAAW,OACrDnC,EAAiBN,EAAYyC,EAAW,IAG5C,IAAIlC,GAASkC,EAAWnB,OAAS,EAAImB,EAAW,GAAK,UAEjDjC,EAAaiC,EAAWnB,OAAS,EAAI3D,EAAE2F,KAAKb,EAAY,KAG5D,IAA8B,mBAAnBnC,GACP,MAAOuB,MAAK,MAAUA,KAAK,KAAOY,EAAW,GAAIlC,EAAQC,EAI7D,IAAIC,GAAa,GAAIxB,GAAgBqB,EACrC,OAA2C,kBAAhCG,GAAW/B,SAAS6B,GACpBsB,KAAK,MAAUA,KAAK,KAAOvB,EAAgBC,EAAQC,IAI9DC,EAAWU,OAASU,KAEpBA,KAAK5C,gBAAgBqB,GAAkBG,EAEvCiB,SAAS6B,KAAKzE,UAAUf,WAAa0C,EACrCiB,SAAS8B,MAAM1E,UAAUf,WAAa0C,EAEtCS,EAAgBW,KAAMvB,EAAgBC,EAAQC,GACvCH,EAAaC,EAAgBC,EAAQC,KAOhDiD,cAAc,WACV,MAAO9F,GAAE4D,KAAKM,KAAKR,SAAU,GAAG,QASpCqC,SAAU,SAASC,EAAUC,GACpBA,GAAWA,KAAY,IACxBA,GAAWC,QAASD,GAExB,IAAIE,GAAWnG,EAAEC,UAAWgG,EAK5B,OAJAE,GAASD,SAAU,EAGnBnC,SAASqB,OAAOjE,UAAU4E,SAASK,KAAKlC,KAAM8B,EAAUG,GACrDF,EAAQC,QACAhC,KAAKuB,SAASO,GAEdzD,EAAEU,WAAWiC,YAU5BmB,EAActC,SAASqB,OAAOnF,OAC9BD,EAAEC,QAASA,OAAQA,GAAUsF,GAGjC,OADAc,GAAYpG,OAASA,EACdoG,KAaXR,OACI5F,OAAO,SAAUH,GAqDb,MApDAA,GAAaE,EAAEC,QACXqG,uBAAuB,KACvBC,qBAAqB,KAErBC,MAAM,SAAUP,GACZA,EAAUA,KAGV,IAAIQ,GAAUR,EAAQQ,OACtBR,GAAQQ,QAAU,SAAUC,EAAOC,GAI/B,GAHIF,GACAA,EAAQC,EAAOC,GAEfD,EAAMJ,uBAAwB,CAC9B,GAAIM,GAAMF,EAAMJ,sBAChBI,GAAMJ,uBAAyB,KAC/BM,EAAIzD,MAAMuD,IAIlB,IAAIG,GAAQZ,EAAQY,KACpBZ,GAAQY,MAAQ,SAAUH,EAAOC,GACzBE,GACAA,EAAMH,EAAOC,GAEjBD,EAAMR,QAAQ,QAASW,IAE3B9C,SAAS8B,MAAM1E,UAAUqF,MAAMrD,MAAMe,MAAO+B,GAASjD,OAAOhD,EAAE2F,KAAKnB,cASvEsC,MAAM,SAAUC,GAIZ,MAHA7C,MAAKoC,uBAAyB,KAC9BpC,KAAKqC,qBAAuB,MAEvBQ,GAAYA,EAASF,OAEtB3C,KAAKgC,QAAQ,QAAUa,GAAYA,EAASF,OAAUE,QAG1D7C,KAAKoC,uBAAyB,WAC1BpC,KAAKgC,QAAQ,OAAQa,EAASC,OAChCC,KAAK/C,MACA6C,EAASC,QAErBlH,GAEIiE,SAAS8B,MAAM5F,OAAOH,OAOzCK,EAAYC,WAAWH,OAASN,EAAuBQ,EAAYC,cAGnE,IAAIkB,MAGAX,GAAiB,aAAc,eAAgB,cAAe","file":"backbone.controller-1.0.js","sourcesContent":["\r\n//BackboneMVC 1.0\r\n\r\n//Copyright 2012 Changsi An\r\n\r\n//This file is part of Backbone-MVC.\r\n//\r\n//Backbone-MVC is free software: you can redistribute it and/or modify\r\n//it under the terms of the GNU Lesser General Public License as published by\r\n//the Free Software Foundation, either version 3 of the License, or\r\n//(at your option) any later version.\r\n//\r\n//Backbone-MVC is distributed in the hope that it will be useful,\r\n//but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n//MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n//GNU Lesser General Public License for more details.\r\n//\r\n//You should have received a copy of the GNU Lesser General Public License\r\n//along with Backbone-MVC.  If not, see <http://www.gnu.org/licenses/>.\r\n//------------------------------------------------------------------------------\r\n//Quick Start\r\n//\r\n//This software requires Backbone.js and Underscore.js to work correctly.\r\n//\r\n//Usage:\r\n//To create a controller, use :\r\n\r\n//BackboneMVC.Controller.extend({\r\n//  name:'controller1', //mandatory field\r\n//\r\n//  //defined once, will be invoked before each action method\r\n//  beforeFilter:function () {\r\n//  },\r\n//\r\n//  //defined once, will be invoked after each action method\r\n//  afterRender:function () {\r\n//  },\r\n//\r\n//  //used with secure methods, expect true/false or Deferred Object.\r\n//  checkSession:function () {\r\n//  },\r\n//\r\n//  //action method\r\n//  action1:function () {\r\n//      this._privateMethod(\"Hello\");\r\n//  },\r\n//\r\n//  //secure method, checkSession method will be invoked first\r\n//  user_action2:function () {\r\n//  },\r\n//\r\n//  //a private method starts with _\r\n//  _privateMethod:function (message) {\r\n//      alert(message);\r\n//  }\r\n//})\r\n\r\n\r\n//------------------------------------------------------------------------------\r\n(function () {\r\n  'use strict';\r\n  var PRODUCT_NAME = 'BackboneMVC';\r\n\r\n  //check prerequisites\r\n  if (typeof Backbone === 'undefined' || typeof _ === 'undefined') {\r\n      return;\r\n  }\r\n\r\n  /**\r\n   * @namesapce BackboneMVC\r\n   */\r\n  var BackboneMVC = window[PRODUCT_NAME] = {};\r\n\r\n  /**\r\n   * This is the base prototype of the Controller classes.\r\n   * The inheriting classes only expand the prototype so the trouble of handling\r\n   * private constructor is saved.\r\n   * It makes sense that each controller is a singleton. The cases that a\r\n   * controller's state need to be shared across the application are more than the\r\n   * cases that the states need to be kept independently. It also helps the user\r\n   * logic shares the same controller state as the one the Router uses.\r\n   * However, if independent states are vital, one can extend a controller with\r\n   * empty members or define their method statelessly.\r\n   * @type {Class}\r\n   */\r\n  var ControllerSingleton = (function () {\r\n      function BaseController() {\r\n          this._created = (new Date()).getTime(); //this can be useful for development\r\n      }\r\n\r\n      _.extend(BaseController.prototype, {\r\n          _created:null\r\n      });\r\n\r\n      BaseController.extend = function (properties) {\r\n          var instance;\r\n          var klass = function Controller() {\r\n              if (instance !== undefined) { //try to simulate Singleton\r\n                  return instance;\r\n              }\r\n              BaseController.apply(this, arguments);\r\n\r\n              //'initialize()' method works as explicit constructor, if it is defined,\r\n              // then run it\r\n              if (this.initialize !== undefined) {\r\n                  this.initialize.apply(this, arguments);\r\n              }\r\n\r\n              instance = this;\r\n              return instance;\r\n          };\r\n\r\n          klass.prototype = new BaseController();\r\n          _.extend(klass.prototype, properties);\r\n\r\n          klass.prototype.constructor = klass;\r\n          klass.prototype.classId = _.uniqueId('controller_');\r\n\r\n          return klass;\r\n      };\r\n      return BaseController;\r\n  }());\r\n\r\n  _.extend(BackboneMVC, {\r\n      /**\r\n       * A utility method used to create namespace object levels\r\n       * @param {String} namespaceString levels in namespaces\r\n       * @example \"Mammalia.Cetacea.Delphinidae.Dolphin\"\r\n       */\r\n      namespace:function (namespaceString) {\r\n          var components = namespaceString.split('.');\r\n          var node = window;\r\n          for (var i = 0, l = components.length; i < l; i++) {\r\n              if (node[components[i]] === undefined) {\r\n                  node[components[i]] = {};\r\n              }\r\n              node = node[components[i]];\r\n          }\r\n      },\r\n\r\n      /**\r\n       * Backbone MVC Controller class\r\n       * @type {Class} BackboneMVC.Controller\r\n       */\r\n      //some default implementations for the methods are listed here:\r\n      Controller:{\r\n          beforeFilter:function () {\r\n              return $.Deferred().resolve();\r\n          },\r\n\r\n          afterRender:function () {\r\n              return $.Deferred().resolve();\r\n          },\r\n\r\n          checkSession:function () {\r\n              //if not defined, then always succeed\r\n              return $.Deferred().resolve(true);\r\n          },\r\n\r\n          'default':function () {\r\n              //TODO: this function will list all the actions of the controller\r\n              //intend to be overridden in most of the cases\r\n              return true;\r\n          }\r\n      },\r\n\r\n      /**\r\n       * This is the automatic Router class, it is an implementation of Backbone.Router.\r\n       * It must not be further customized, or the automatic routing feature cannot function.\r\n       * @class BackboneMVC.Router\r\n       */\r\n      Router:(function(){\r\n          var _inherentRouterProperties = {\r\n              _history:[],\r\n              ControllersPool: {},\r\n              routes:{\r\n                  \"*components\":'dispatch' // route everything to 'dispatch' method\r\n              },\r\n\r\n              dispatch:function (actionPath) {\r\n                  var components = actionPath.replace(/\\/+$/g, '').split('/');\r\n                  var controllerName;\r\n\r\n                  //look for controllers\r\n                  if (ControllersPool[components[0]]) {\r\n                      controllerName = components[0];\r\n                  } else if (typeof ControllersPool[camelCased(components[0])] !== 'undefined') {\r\n                      controllerName = camelCased(components[0]);\r\n                  } else if (typeof ControllersPool[underscored(components[0])] !== 'undefined') {\r\n                      controllerName = underscored(components[0]);\r\n                  }\r\n                  //if the action is omitted, it is 'default'.\r\n                  var action = components.length > 1 ? components[1] : 'default';\r\n                  //the URL components after the 2nd are passed to the action method\r\n                  var _arguments = components.length > 2 ? _.rest(components, 2) : [];\r\n\r\n                  //test if the controller exists, if not, return a deferred object and reject it.\r\n                  if (typeof controllerName === 'undefined') {\r\n                      return this['404'] && this['404'](components[0], action, _arguments); //no such controller, reject\r\n                  }\r\n\r\n                  //if (typeof ControllersPool[controllerName].prototype[action] !== 'function') {\r\n                  var controller = new ControllersPool[controllerName]();\r\n                  if (typeof controller._actions[action] !== 'function') {\r\n                      return this['404'] && this['404'](controllerName, action, _arguments); //no such action, reject\r\n                  }\r\n\r\n                  //控制器建立路由对象的引用\r\n                  controller.router = this;\r\n                  //推入控制器池\r\n                  this.ControllersPool[controllerName] = controller;\r\n                  //视图层建立控制器层对象引用\r\n                  Backbone.View.prototype.Controller = controller;\r\n                  Backbone.Model.prototype.Controller = controller;\r\n\r\n                  addHistoryEntry(this, controllerName, action, _arguments);\r\n                  return invokeAction(controllerName, action, _arguments);\r\n              },\r\n\r\n              /**\r\n               * Return the last invoked action\r\n               * @return {object} the last action being invoked and it's parameters\r\n               */\r\n              getLastAction:function () {\r\n                  return _.last(this._history, 1)[0] || [];\r\n              },\r\n\r\n              /**\r\n               * Make navigate() returns a deferred object\r\n               * @param fragment\r\n               * @param options may contain trigger and replace options.\r\n               * @return {*} Deferred\r\n               */\r\n              navigate: function(fragment, options){\r\n                  if (!options || options === true) {\r\n                      options = {trigger: options};\r\n                  }\r\n                  var _options = _.extend({}, options);\r\n                  _options.trigger = false; //too hard to port Backbone's mechanism without much refactory,\r\n                  // but such logical flaw can be exploited. The goal is to not modify Backbone.js at all\r\n\r\n                  Backbone.Router.prototype.navigate.call(this, fragment, _options);\r\n                  if(options.trigger){\r\n                      return this.dispatch(fragment);\r\n                  }else{\r\n                      return $.Deferred().resolve();\r\n                  }\r\n              }\r\n          };\r\n\r\n          function extend(properties){\r\n              var _routes = _.extend(properties.routes || {}, _inherentRouterProperties.routes );\r\n              return Backbone.Router.extend(_.extend(properties, _inherentRouterProperties, { routes: _routes }));\r\n          }\r\n\r\n          var RouterClass = Backbone.Router.extend(\r\n              _.extend({ extend: extend }, _inherentRouterProperties)\r\n          );\r\n          RouterClass.extend = extend;\r\n          return RouterClass;\r\n      })(),\r\n\r\n      /**\r\n       * An extension of BackboneMVC.Model, add events of 'read' and 'error' to\r\n       * a model, which will be triggered upon loading data from server.\r\n       *\r\n       * This class assumes the returned json packet contains both 'error' and 'data' fields\r\n       * as root properties, which is commonly seen in modern web service APIs. If you business\r\n       * logic cannot comply this standard. Then this model class might not fit.\r\n       * @class BackboneMVC.Model\r\n       * @example //TODO\r\n       */\r\n      Model:{\r\n          extend:function (properties) {\r\n              properties = _.extend({\r\n                  __fetchSuccessCallback:null,\r\n                  __fetchErrorCallback:null,\r\n\r\n                  fetch:function (options) {\r\n                      options = options || {};\r\n                      //wrap the success callback, so we get a chance of triggering 'read' event\r\n                      //by taking over the '__fetchSuccessCallback()' defined in 'parse()'\r\n                      var success = options.success;\r\n                      options.success = function (model, resp) {\r\n                          if (success) {\r\n                              success(model, resp);\r\n                          }\r\n                          if (model.__fetchSuccessCallback) {\r\n                              var tmp = model.__fetchSuccessCallback;\r\n                              model.__fetchSuccessCallback = null; //remove the temporary method after use\r\n                              tmp.apply(model);\r\n                          }\r\n                      };\r\n                      //wrap the error callback, so we get a chance of triggering 'error' event\r\n                      var error = options.error;\r\n                      options.error = function (model, resp) {\r\n                          if (error){\r\n                              error(model, resp);\r\n                          }\r\n                          model.trigger('error', error);\r\n                      };\r\n                      Backbone.Model.prototype.fetch.apply(this, [options].concat(_.rest(arguments)));\r\n                  },\r\n\r\n                  /**\r\n                   * Intercept the data return from server and see if there is any error.\r\n                   * Overriding is discouraged.\r\n                   * @param {object} response the returned and parsed json object\r\n                   * @return {*}\r\n                   */\r\n                  parse:function (response) {\r\n                      this.__fetchSuccessCallback = null;\r\n                      this.__fetchErrorCallback = null;\r\n\r\n                      if (!response || response.error) {\r\n                          //if response contains a non-null 'error' field, still trigger 'error' event\r\n                          this.trigger('error', (response && response.error) || response);\r\n                          return {};\r\n                      }\r\n                      this.__fetchSuccessCallback = function () {\r\n                          this.trigger('read', response.data);\r\n                      }.bind(this);\r\n                      return response.data;\r\n                  }\r\n              }, properties);\r\n\r\n              return Backbone.Model.extend(properties);\r\n          }\r\n      }\r\n  });\r\n\r\n  //_extendMethodGenerator is used to create a closure that can store class members(fields and members)\r\n  //in the ancestry, so as to provide a basis for the children controller to further derive\r\n  BackboneMVC.Controller.extend = _extendMethodGenerator(BackboneMVC.Controller, {});\r\n\r\n  //internal variables\r\n  var ControllersPool = {}; //hashmap, keeps a record of defined Controllers with their names as keys\r\n\r\n  //if a Controller class defines these actions, then they will not be treated as action methods\r\n  var systemActions = ['initialize', 'beforeFilter', 'afterRender', 'checkSession'];\r\n\r\n  //internal functions\r\n  /**\r\n   *\r\n   * @param {Class} klass the current klass object\r\n   * @param {object} _inheritedMethodsDefinition store all inherited methods from the ancestors(in closure only)\r\n   * @return {Function}\r\n   * @private\r\n   */\r\n  function _extendMethodGenerator(klass, _inheritedMethodsDefinition) {\r\n      //create closure\r\n      return function (properties) {\r\n          var name = properties.name;\r\n          if (typeof name === 'undefined') {\r\n              throw '\\'name\\' property is mandatory ';\r\n          }\r\n\r\n          // also inherits the methods from ancestry\r\n          properties = _.extend({}, _inheritedMethodsDefinition, properties);\r\n\r\n          //special handling of method override in inheritance\r\n          var tmpControllerProperties = _.extend({}, BackboneMVC.Controller);\r\n\r\n          var actionMethods = {}, secureActions = {};\r\n          //try to pick out action methods\r\n          _.each(properties, function (value, propertyName) {\r\n              tmpControllerProperties[propertyName] = value; // transfer the property, which will be later\r\n              //filter the non-action methods\r\n              if (typeof value !== 'function' || propertyName[0] === '_' ||\r\n                  _.indexOf(systemActions, propertyName) >= 0) {\r\n                  return false;\r\n              }\r\n\r\n              actionMethods[propertyName] = value;\r\n              if (propertyName.match(/^user_/i)) { //special handling to secure methods\r\n                  secureActions[propertyName] = value;\r\n                  // even though secure methods start with 'user_', it's useful if they can be invoked without\r\n                  // that prefix\r\n                  var shortName = propertyName.replace(/^user_/i, '');\r\n                  if (typeof properties[shortName] !== 'function') {\r\n                      // if the shortname function is not defined separately, also account it for a secure method\r\n                      secureActions[shortName] = value;\r\n                      actionMethods[shortName] = value;\r\n                  }\r\n              }\r\n          });\r\n\r\n          //_actions and _secureActions are only used to tag those two types of methods, the action methods\r\n          //are still with the controller\r\n          _.extend(tmpControllerProperties, actionMethods, {\r\n              _actions:actionMethods,\r\n              _secureActions:secureActions\r\n          });\r\n          //remove the extend method if there is one, so it doesn't stay in the property history\r\n          if ('extend' in tmpControllerProperties) {\r\n              delete tmpControllerProperties.extend;\r\n          }\r\n          //get around of singleton inheritance issue by using mixin\r\n          var _controllerClass = ControllerSingleton.extend(tmpControllerProperties);\r\n          //special handling for utility method of inheritance\r\n          _.extend(_controllerClass, {\r\n              extend:_extendMethodGenerator(_controllerClass, _.extend({}, _inheritedMethodsDefinition, properties))\r\n          });\r\n          //reference parent methods for child object __super__\r\n          _controllerClass.prototype.constructor.__super__ = klass.prototype;\r\n          //Register Controller\r\n          ControllersPool[name] = _controllerClass;\r\n\r\n          return _controllerClass;\r\n      };\r\n  }\r\n\r\n  function _d(a) {\r\n      console.log(a);\r\n  }\r\n\r\n  /**\r\n   * use duck-typing to check if an object is a Deferred Object.\r\n   * @param suspiciousObject\r\n   * @return {boolean}\r\n   */\r\n  function isDeferred(suspiciousObject) {\r\n      //duck-typing\r\n      return _.isObject(suspiciousObject) && suspiciousObject.promise &&\r\n          typeof suspiciousObject.promise === 'function';\r\n  }\r\n\r\n  /**\r\n   * Convert a non-deferred object ot deferred object, and resolve or reject the deferred object based on the value\r\n   * of the non-deferred object.\r\n   * @param deferred\r\n   * @param result\r\n   * @return {object} a Deferred Object\r\n   */\r\n  function assertDeferredByResult(deferred, result) {\r\n      if (typeof result === 'undefined') {\r\n          result = true;\r\n      }\r\n      return deferred[result ? 'resolve' : 'reject'](result);\r\n  }\r\n\r\n  /**\r\n   * convert to CamelCased form\r\n   * @param string the non-camel-cased form\r\n   * @return {string}\r\n   */\r\n  function camelCased(string) {\r\n      if (typeof string !== 'string') {\r\n          return null;\r\n      }\r\n      string = string.replace(/\\s{2,}/g, ' ');\r\n\r\n      return (_.map(string.split(' '), function (entry) {\r\n          return entry.replace(/(^|_)[a-z]/gi,function (match) {\r\n              return match.toUpperCase();\r\n          }).replace(/_/g, '');\r\n      })).join(' ');\r\n\r\n  }\r\n\r\n  /**\r\n   * convert to underscored form\r\n   * @param string the non-underscored form\r\n   * @return {string}\r\n   */\r\n  function underscored(string) {\r\n      if (typeof string !== 'string') {\r\n          return null;\r\n      }\r\n      string = string.replace(/\\s{2,}/g, ' ');\r\n\r\n      return (_.map(string.split(' '), function (entry) {\r\n          return entry.replace(/^[A-Z]/g, function (match) {\r\n              return match.toLowerCase();\r\n          })\r\n              .replace(/([a-z])([A-Z])/g, function ($, $1, $2) {\r\n                  return $1 + '_' + $2.toLowerCase();\r\n              });\r\n      })).join(' ');\r\n  }\r\n\r\n  /**\r\n   * Invoke the action method under a controller, also takes care of event callbacks and session checking method\r\n   * on the call chain.\r\n   * @param controllerName the controller name\r\n   * @param {string} action action method name\r\n   * @param {Array} _arguments the parameters sent ot the action method\r\n   * @return {*}\r\n   */\r\n  function invokeAction(controllerName, action, _arguments) {\r\n      var controller = new ControllersPool[controllerName]();\r\n\r\n      var hooksParameters = [action].concat(_arguments);\r\n      var deferred = $.Deferred();\r\n      //do beforeFilter\r\n      var result = controller.beforeFilter.apply(controller, hooksParameters);\r\n      if (isDeferred(result)) {\r\n          deferred = result;\r\n      } else {\r\n          assertDeferredByResult(deferred, result);\r\n      }\r\n\r\n      //check if secure method\r\n      if (typeof controller._secureActions[action] === 'function') {\r\n          //do session checking\r\n          deferred = deferred.pipe(function () {\r\n              var result = controller.checkSession.apply(controller, _arguments);\r\n\r\n              if (isDeferred(result)) {\r\n                  return result;\r\n              } else {\r\n                  return assertDeferredByResult($.Deferred(), result);\r\n              }\r\n          });\r\n      }\r\n\r\n      //invoke the action\r\n      deferred = deferred.pipe(function () {\r\n          var result = controller[action].apply(controller, _arguments);\r\n\r\n          if (isDeferred(result)) {\r\n              return result;\r\n          } else {\r\n              return assertDeferredByResult($.Deferred(), result);\r\n          }\r\n      });\r\n\r\n      //do afterRender\r\n      deferred = deferred.pipe(function () {\r\n          var result = controller.afterRender.apply(controller, hooksParameters);\r\n          if (isDeferred(result)) {\r\n              return result;\r\n          } else {\r\n              return assertDeferredByResult($.Deferred(), result);\r\n          }\r\n      });\r\n\r\n      return deferred;\r\n  }\r\n\r\n  function addHistoryEntry(router, controller_name, action, _arguments) {\r\n      if (router._history.length > 888) {\r\n          router._history = _.last(router._history, 888);\r\n      }\r\n      router._history.push([controller_name, action, _arguments]);\r\n  }\r\n})();"]}